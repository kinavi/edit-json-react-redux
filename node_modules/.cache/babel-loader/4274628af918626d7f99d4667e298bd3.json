{"ast":null,"code":"var _jsxFileName = \"/home/vm/test_work/src/Components/React/User/index.js\";\nimport React, { Component } from 'react';\nimport './style.css';\n\nconst UsersList = ({}) => {\n  //console.dir(props)store, id, name, email, config_bool\n  return React.createElement(\"div\", {\n    className: \"card-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  });\n}; // class Color extends Component{\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             isEdit:false\n//         }\n//         this.onEdit=this.onEdit.bind(this)\n//         this.onSave=this.onSave.bind(this)\n//         this.onСancel=this.onСancel.bind(this)\n//     }\n//     getIdref = (node)=>{this.idField=node}\n//     getNameref= (node)=>{this.nameField=node}\n//     getEmailref= (node)=>{this.emailField=node}\n//     getConfigref= (node)=>{this.configField=node}\n//     getTimerref= (node)=>{this.timerField=node}\n//     getflagsref= (node)=>{this.flagsField=node}\n//     onEdit(){\n//         const { nameField, emailField, configField,timerField,flagsField} = this\n//         const { name, email, config_bool, timer_integer, flags} = this.props\n//         nameField.value = name\n//         emailField.value = email\n//         configField.value = config_bool\n//         timerField.value = timer_integer\n//         flagsField.value = flags\n//         this.setState({isEdit:true})\n//     }\n//     onSave(){\n//         const {id, onSave} = this.props\n//         const {nameField, emailField, configField,timerField,flagsField} = this\n//         onSave({\n//             id:id,\n//             name:nameField.value,\n//             email:emailField.value,\n//             config_bool:configField.value,\n//             timer_integer:timerField.value,\n//             flags:flagsField.value,\n//             dateactivate:new Date().toGMTString(),\n//             dateupdate:new Date().toGMTString()\n//         })\n//         this.setState({isEdit:false})\n//     }\n//     onСancel(){\n//         this.setState({isEdit:false})\n//     }\n//     render(){\n//         const {onEdit, onSave, onСancel, getNameref, getEmailref, getConfigref, getTimerref, getflagsref} = this\n//         const {isEdit} = this.state\n//         const {id, name, email, config_bool, timer_integer, flags, dateactivate, dateupdate, onRemove} = this.props\n//         return(\n//             <div className='card-user'>\n//                 <div className='item'>\n//                     <div>{id}</div>\n//                 </div>\n//                 <div className='item'>\n//                     <div hidden={isEdit}>{name}</div>\n//                     <input ref={getNameref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{email}</div>\n//                     <input ref={getEmailref} type=\"text\" size='10' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{config_bool}</div>\n//                     <input ref={getConfigref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{timer_integer}</div>\n//                     <input ref={getTimerref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{flags}</div>\n//                     <input ref={getflagsref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateactivate}</div>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateupdate}</div>\n//                 </div>\n//                 <button className='item' onClick={isEdit?onSave:onEdit}>{isEdit?'Save':'Edit'}</button> \n//                 <button className='item' onClick={isEdit?onСancel:onRemove}>{isEdit?'Cancel':'Delete'}</button>\n//             </div>\n//         )\n//     }\n// }\n//Old vers\n// const Color = ({id, name, email, onRemove=f=>f})=>\n//     <div className='card-user'>\n//         <div className='item'>{id}</div>\n//         <div className='item'>{name}</div>\n//         <div className='item' >{email}</div>\n//         <button className='item'>Edit</button> \n//         <button className='item' onClick={onRemove}>Delete</button>\n//     </div>\n\n\nexport default UsersList;","map":{"version":3,"sources":["/home/vm/test_work/src/Components/React/User/index.js"],"names":["React","Component","UsersList"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,aAAP;;AAEA,MAAMC,SAAS,GAAG,CAAC,EAAD,KAAM;AACpB;AACA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAmCH,CArCD,C,CAuCA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeA,SAAf","sourcesContent":["import React,{Component} from 'react';\nimport './style.css'\n\nconst UsersList = ({})=>{\n    //console.dir(props)store, id, name, email, config_bool\n    return (\n        <div className='card-user'>\n                 {/* <div className='item'>\n                     <div>{id}</div>\n                 </div>\n                 <div className='item'>\n                     <div hidden={isEdit}>{name}</div>\n                     <input ref={getNameref} type=\"text\" size='5' hidden={!isEdit}></input>\n                 </div>\n                 <div className='item' >\n                     <div hidden={isEdit}>{email}</div>\n                     <input ref={getEmailref} type=\"text\" size='10' hidden={!isEdit}></input>\n                 </div>\n                 <div className='item' >\n                     <div hidden={isEdit}>{config_bool}</div>\n                     <input ref={getConfigref} type=\"text\" size='5' hidden={!isEdit}></input>\n                 </div>\n                 <div className='item' >\n                     <div hidden={isEdit}>{timer_integer}</div>\n                     <input ref={getTimerref} type=\"text\" size='5' hidden={!isEdit}></input>\n                 </div>\n                 <div className='item' >\n                     <div hidden={isEdit}>{flags}</div>\n                     <input ref={getflagsref} type=\"text\" size='5' hidden={!isEdit}></input>\n                 </div>\n                 <div className='item' >\n                     <div>{dateactivate}</div>\n                 </div>\n                 <div className='item' >\n                     <div>{dateupdate}</div>\n                 </div>\n                 <button className='item' onClick={isEdit?onSave:onEdit}>{isEdit?'Save':'Edit'}</button> \n                 <button className='item' onClick={isEdit?onСancel:onRemove}>{isEdit?'Cancel':'Delete'}</button> */}\n             </div>\n    )\n}\n\n// class Color extends Component{\n\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             isEdit:false\n//         }\n\n//         this.onEdit=this.onEdit.bind(this)\n//         this.onSave=this.onSave.bind(this)\n//         this.onСancel=this.onСancel.bind(this)\n//     }\n\n//     getIdref = (node)=>{this.idField=node}\n//     getNameref= (node)=>{this.nameField=node}\n//     getEmailref= (node)=>{this.emailField=node}\n//     getConfigref= (node)=>{this.configField=node}\n//     getTimerref= (node)=>{this.timerField=node}\n//     getflagsref= (node)=>{this.flagsField=node}\n    \n//     onEdit(){\n//         const { nameField, emailField, configField,timerField,flagsField} = this\n//         const { name, email, config_bool, timer_integer, flags} = this.props\n        \n//         nameField.value = name\n//         emailField.value = email\n//         configField.value = config_bool\n//         timerField.value = timer_integer\n//         flagsField.value = flags\n\n//         this.setState({isEdit:true})\n//     }\n\n//     onSave(){\n//         const {id, onSave} = this.props\n//         const {nameField, emailField, configField,timerField,flagsField} = this\n//         onSave({\n//             id:id,\n//             name:nameField.value,\n//             email:emailField.value,\n//             config_bool:configField.value,\n//             timer_integer:timerField.value,\n//             flags:flagsField.value,\n//             dateactivate:new Date().toGMTString(),\n//             dateupdate:new Date().toGMTString()\n//         })\n//         this.setState({isEdit:false})\n//     }\n\n//     onСancel(){\n//         this.setState({isEdit:false})\n//     }\n\n\n\n//     render(){\n//         const {onEdit, onSave, onСancel, getNameref, getEmailref, getConfigref, getTimerref, getflagsref} = this\n//         const {isEdit} = this.state\n//         const {id, name, email, config_bool, timer_integer, flags, dateactivate, dateupdate, onRemove} = this.props\n//         return(\n//             <div className='card-user'>\n//                 <div className='item'>\n//                     <div>{id}</div>\n//                 </div>\n//                 <div className='item'>\n//                     <div hidden={isEdit}>{name}</div>\n//                     <input ref={getNameref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{email}</div>\n//                     <input ref={getEmailref} type=\"text\" size='10' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{config_bool}</div>\n//                     <input ref={getConfigref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{timer_integer}</div>\n//                     <input ref={getTimerref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{flags}</div>\n//                     <input ref={getflagsref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateactivate}</div>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateupdate}</div>\n//                 </div>\n//                 <button className='item' onClick={isEdit?onSave:onEdit}>{isEdit?'Save':'Edit'}</button> \n//                 <button className='item' onClick={isEdit?onСancel:onRemove}>{isEdit?'Cancel':'Delete'}</button>\n//             </div>\n//         )\n//     }\n// }\n\n\n//Old vers\n// const Color = ({id, name, email, onRemove=f=>f})=>\n//     <div className='card-user'>\n//         <div className='item'>{id}</div>\n//         <div className='item'>{name}</div>\n//         <div className='item' >{email}</div>\n//         <button className='item'>Edit</button> \n//         <button className='item' onClick={onRemove}>Delete</button>\n//     </div>\n\nexport default UsersList "]},"metadata":{},"sourceType":"module"}