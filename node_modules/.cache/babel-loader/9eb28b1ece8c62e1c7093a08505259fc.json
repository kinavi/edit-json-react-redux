{"ast":null,"code":"var _jsxFileName = \"/home/vm/test_work/src/Components/React/User/index.js\";\nimport React, { Component } from 'react';\nimport './style.css';\n\nconst UsersList = ({\n  store,\n  id,\n  name,\n  email,\n  config_bool\n}) => {\n  console.dir(props);\n  return React.createElement(\"div\", {\n    className: \"card-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, id)), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, name), React.createElement(\"input\", {\n    ref: getNameref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, email), React.createElement(\"input\", {\n    ref: getEmailref,\n    type: \"text\",\n    size: \"10\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, config_bool), React.createElement(\"input\", {\n    ref: getConfigref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, timer_integer), React.createElement(\"input\", {\n    ref: getTimerref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, flags), React.createElement(\"input\", {\n    ref: getflagsref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, dateactivate)), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, dateupdate)), React.createElement(\"button\", {\n    className: \"item\",\n    onClick: isEdit ? onSave : onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, isEdit ? 'Save' : 'Edit'), React.createElement(\"button\", {\n    className: \"item\",\n    onClick: isEdit ? onСancel : onRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, isEdit ? 'Cancel' : 'Delete'));\n}; // class Color extends Component{\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             isEdit:false\n//         }\n//         this.onEdit=this.onEdit.bind(this)\n//         this.onSave=this.onSave.bind(this)\n//         this.onСancel=this.onСancel.bind(this)\n//     }\n//     getIdref = (node)=>{this.idField=node}\n//     getNameref= (node)=>{this.nameField=node}\n//     getEmailref= (node)=>{this.emailField=node}\n//     getConfigref= (node)=>{this.configField=node}\n//     getTimerref= (node)=>{this.timerField=node}\n//     getflagsref= (node)=>{this.flagsField=node}\n//     onEdit(){\n//         const { nameField, emailField, configField,timerField,flagsField} = this\n//         const { name, email, config_bool, timer_integer, flags} = this.props\n//         nameField.value = name\n//         emailField.value = email\n//         configField.value = config_bool\n//         timerField.value = timer_integer\n//         flagsField.value = flags\n//         this.setState({isEdit:true})\n//     }\n//     onSave(){\n//         const {id, onSave} = this.props\n//         const {nameField, emailField, configField,timerField,flagsField} = this\n//         onSave({\n//             id:id,\n//             name:nameField.value,\n//             email:emailField.value,\n//             config_bool:configField.value,\n//             timer_integer:timerField.value,\n//             flags:flagsField.value,\n//             dateactivate:new Date().toGMTString(),\n//             dateupdate:new Date().toGMTString()\n//         })\n//         this.setState({isEdit:false})\n//     }\n//     onСancel(){\n//         this.setState({isEdit:false})\n//     }\n//     render(){\n//         const {onEdit, onSave, onСancel, getNameref, getEmailref, getConfigref, getTimerref, getflagsref} = this\n//         const {isEdit} = this.state\n//         const {id, name, email, config_bool, timer_integer, flags, dateactivate, dateupdate, onRemove} = this.props\n//         return(\n//             <div className='card-user'>\n//                 <div className='item'>\n//                     <div>{id}</div>\n//                 </div>\n//                 <div className='item'>\n//                     <div hidden={isEdit}>{name}</div>\n//                     <input ref={getNameref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{email}</div>\n//                     <input ref={getEmailref} type=\"text\" size='10' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{config_bool}</div>\n//                     <input ref={getConfigref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{timer_integer}</div>\n//                     <input ref={getTimerref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{flags}</div>\n//                     <input ref={getflagsref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateactivate}</div>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateupdate}</div>\n//                 </div>\n//                 <button className='item' onClick={isEdit?onSave:onEdit}>{isEdit?'Save':'Edit'}</button> \n//                 <button className='item' onClick={isEdit?onСancel:onRemove}>{isEdit?'Cancel':'Delete'}</button>\n//             </div>\n//         )\n//     }\n// }\n//Old vers\n// const Color = ({id, name, email, onRemove=f=>f})=>\n//     <div className='card-user'>\n//         <div className='item'>{id}</div>\n//         <div className='item'>{name}</div>\n//         <div className='item' >{email}</div>\n//         <button className='item'>Edit</button> \n//         <button className='item' onClick={onRemove}>Delete</button>\n//     </div>\n\n\nexport default UsersList;","map":{"version":3,"sources":["/home/vm/test_work/src/Components/React/User/index.js"],"names":["React","Component","UsersList","store","id","name","email","config_bool","console","dir","props","isEdit","getNameref","getEmailref","getConfigref","timer_integer","getTimerref","flags","getflagsref","dateactivate","dateupdate","onSave","onEdit","onСancel","onRemove"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './style.css'\n\nconst UsersList = ({store, id, name, email, config_bool})=>{\n    console.dir(props)\n    return (\n        <div className='card-user'>\n                 <div className='item'>\n                     <div>{id}</div>\n                 </div>\n                 <div className='item'>\n                     <div hidden={isEdit}>{name}</div>\n                     <input ref={getNameref} type=\"text\" size='5' hidden={!isEdit}></input>\n                 </div>\n                 <div className='item' >\n                     <div hidden={isEdit}>{email}</div>\n                     <input ref={getEmailref} type=\"text\" size='10' hidden={!isEdit}></input>\n                 </div>\n                 <div className='item' >\n                     <div hidden={isEdit}>{config_bool}</div>\n                     <input ref={getConfigref} type=\"text\" size='5' hidden={!isEdit}></input>\n                 </div>\n                 <div className='item' >\n                     <div hidden={isEdit}>{timer_integer}</div>\n                     <input ref={getTimerref} type=\"text\" size='5' hidden={!isEdit}></input>\n                 </div>\n                 <div className='item' >\n                     <div hidden={isEdit}>{flags}</div>\n                     <input ref={getflagsref} type=\"text\" size='5' hidden={!isEdit}></input>\n                 </div>\n                 <div className='item' >\n                     <div>{dateactivate}</div>\n                 </div>\n                 <div className='item' >\n                     <div>{dateupdate}</div>\n                 </div>\n                 <button className='item' onClick={isEdit?onSave:onEdit}>{isEdit?'Save':'Edit'}</button> \n                 <button className='item' onClick={isEdit?onСancel:onRemove}>{isEdit?'Cancel':'Delete'}</button>\n             </div>\n    )\n}\n\n// class Color extends Component{\n\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             isEdit:false\n//         }\n\n//         this.onEdit=this.onEdit.bind(this)\n//         this.onSave=this.onSave.bind(this)\n//         this.onСancel=this.onСancel.bind(this)\n//     }\n\n//     getIdref = (node)=>{this.idField=node}\n//     getNameref= (node)=>{this.nameField=node}\n//     getEmailref= (node)=>{this.emailField=node}\n//     getConfigref= (node)=>{this.configField=node}\n//     getTimerref= (node)=>{this.timerField=node}\n//     getflagsref= (node)=>{this.flagsField=node}\n    \n//     onEdit(){\n//         const { nameField, emailField, configField,timerField,flagsField} = this\n//         const { name, email, config_bool, timer_integer, flags} = this.props\n        \n//         nameField.value = name\n//         emailField.value = email\n//         configField.value = config_bool\n//         timerField.value = timer_integer\n//         flagsField.value = flags\n\n//         this.setState({isEdit:true})\n//     }\n\n//     onSave(){\n//         const {id, onSave} = this.props\n//         const {nameField, emailField, configField,timerField,flagsField} = this\n//         onSave({\n//             id:id,\n//             name:nameField.value,\n//             email:emailField.value,\n//             config_bool:configField.value,\n//             timer_integer:timerField.value,\n//             flags:flagsField.value,\n//             dateactivate:new Date().toGMTString(),\n//             dateupdate:new Date().toGMTString()\n//         })\n//         this.setState({isEdit:false})\n//     }\n\n//     onСancel(){\n//         this.setState({isEdit:false})\n//     }\n\n\n\n//     render(){\n//         const {onEdit, onSave, onСancel, getNameref, getEmailref, getConfigref, getTimerref, getflagsref} = this\n//         const {isEdit} = this.state\n//         const {id, name, email, config_bool, timer_integer, flags, dateactivate, dateupdate, onRemove} = this.props\n//         return(\n//             <div className='card-user'>\n//                 <div className='item'>\n//                     <div>{id}</div>\n//                 </div>\n//                 <div className='item'>\n//                     <div hidden={isEdit}>{name}</div>\n//                     <input ref={getNameref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{email}</div>\n//                     <input ref={getEmailref} type=\"text\" size='10' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{config_bool}</div>\n//                     <input ref={getConfigref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{timer_integer}</div>\n//                     <input ref={getTimerref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{flags}</div>\n//                     <input ref={getflagsref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateactivate}</div>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateupdate}</div>\n//                 </div>\n//                 <button className='item' onClick={isEdit?onSave:onEdit}>{isEdit?'Save':'Edit'}</button> \n//                 <button className='item' onClick={isEdit?onСancel:onRemove}>{isEdit?'Cancel':'Delete'}</button>\n//             </div>\n//         )\n//     }\n// }\n\n\n//Old vers\n// const Color = ({id, name, email, onRemove=f=>f})=>\n//     <div className='card-user'>\n//         <div className='item'>{id}</div>\n//         <div className='item'>{name}</div>\n//         <div className='item' >{email}</div>\n//         <button className='item'>Edit</button> \n//         <button className='item' onClick={onRemove}>Delete</button>\n//     </div>\n\nexport default UsersList "]},"metadata":{},"sourceType":"module"}