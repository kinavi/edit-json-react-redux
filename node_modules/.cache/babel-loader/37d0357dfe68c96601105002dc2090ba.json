{"ast":null,"code":"var _jsxFileName = \"/home/vm/\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438/test_work/src/Components/React/User/index.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport editUser from '../../Redux/Actions/EditUser';\n\nconst User = ({\n  store,\n  id,\n  name,\n  email,\n  config_bool,\n  timer_integer,\n  flags,\n  dateactivate,\n  dateupdate,\n  onRemove,\n  isEdit,\n  onEdit,\n  onCancel\n}) => {\n  console.dir(isEdit);\n\n  const onSave = () => {\n    const nameField = this.nameField,\n          emailField = this.emailField,\n          configField = this.configField,\n          timerField = this.timerField,\n          flagsField = this.flagsField;\n    store.dispatch(editUser(nameField, emailField, configField, timerField, flagsField));\n  };\n\n  const getNameref = this.getNameref;\n  return React.createElement(\"div\", {\n    className: \"card-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, id)), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, name), React.createElement(\"input\", {\n    ref: getNameref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    placeholder: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, email), React.createElement(\"input\", {\n    ref: getEmailref,\n    type: \"text\",\n    size: \"10\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, config_bool), React.createElement(\"input\", {\n    ref: getConfigref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, timer_integer), React.createElement(\"input\", {\n    ref: getTimerref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, flags), React.createElement(\"input\", {\n    ref: getflagsref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, dateactivate)), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, dateupdate)), React.createElement(\"button\", {\n    className: \"item\",\n    onClick: isEdit ? onSave : onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, isEdit ? 'Save' : 'Edit'), React.createElement(\"button\", {\n    className: \"item\",\n    onClick: isEdit ? onCancel : onRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, isEdit ? 'Cancel' : 'Delete'));\n}; //User.getIdref = (node)=>{this.idField=node}\n\n\nUser.getNameref = node => {\n  this.nameField = node;\n};\n\nUser.getEmailref = node => {\n  this.emailField = node;\n};\n\nUser.getConfigref = node => {\n  this.configField = node;\n};\n\nUser.getTimerref = node => {\n  this.timerField = node;\n};\n\nUser.getflagsref = node => {\n  this.flagsField = node;\n}; // function onSave(){\n// }\n// class Color extends Component{\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             isEdit:false\n//         }\n//         this.onEdit=this.onEdit.bind(this)\n//         this.onSave=this.onSave.bind(this)\n//         this.onСancel=this.onСancel.bind(this)\n//     }\n//     getIdref = (node)=>{this.idField=node}\n//     getNameref= (node)=>{this.nameField=node}\n//     getEmailref= (node)=>{this.emailField=node}\n//     getConfigref= (node)=>{this.configField=node}\n//     getTimerref= (node)=>{this.timerField=node}\n//     getflagsref= (node)=>{this.flagsField=node}\n//     onEdit(){\n//         const { nameField, emailField, configField,timerField,flagsField} = this\n//         const { name, email, config_bool, timer_integer, flags} = this.props\n//         nameField.value = name\n//         emailField.value = email\n//         configField.value = config_bool\n//         timerField.value = timer_integer\n//         flagsField.value = flags\n//         this.setState({isEdit:true})\n//     }\n//     onSave(){\n//         const {id, onSave} = this.props\n//         const {nameField, emailField, configField,timerField,flagsField} = this\n//         onSave({\n//             id:id,\n//             name:nameField.value,\n//             email:emailField.value,\n//             config_bool:configField.value,\n//             timer_integer:timerField.value,\n//             flags:flagsField.value,\n//             dateactivate:new Date().toGMTString(),\n//             dateupdate:new Date().toGMTString()\n//         })\n//         this.setState({isEdit:false})\n//     }\n//     onСancel(){\n//         this.setState({isEdit:false})\n//     }\n//     render(){\n//         const {onEdit, onSave, onСancel, getNameref, getEmailref, getConfigref, getTimerref, getflagsref} = this\n//         const {isEdit} = this.state\n//         const {id, name, email, config_bool, timer_integer, flags, dateactivate, dateupdate, onRemove} = this.props\n//         return(\n//             <div className='card-user'>\n//                 <div className='item'>\n//                     <div>{id}</div>\n//                 </div>\n//                 <div className='item'>\n//                     <div hidden={isEdit}>{name}</div>\n//                     <input ref={getNameref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{email}</div>\n//                     <input ref={getEmailref} type=\"text\" size='10' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{config_bool}</div>\n//                     <input ref={getConfigref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{timer_integer}</div>\n//                     <input ref={getTimerref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{flags}</div>\n//                     <input ref={getflagsref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateactivate}</div>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateupdate}</div>\n//                 </div>\n//                 <button className='item' onClick={isEdit?onSave:onEdit}>{isEdit?'Save':'Edit'}</button> \n//                 <button className='item' onClick={isEdit?onСancel:onRemove}>{isEdit?'Cancel':'Delete'}</button>\n//             </div>\n//         )\n//     }\n// }\n//Old vers\n// const Color = ({id, name, email, onRemove=f=>f})=>\n//     <div className='card-user'>\n//         <div className='item'>{id}</div>\n//         <div className='item'>{name}</div>\n//         <div className='item' >{email}</div>\n//         <button className='item'>Edit</button> \n//         <button className='item' onClick={onRemove}>Delete</button>\n//     </div>\n\n\nexport default User;","map":{"version":3,"sources":["/home/vm/Загрузки/test_work/src/Components/React/User/index.js"],"names":["React","Component","editUser","User","store","id","name","email","config_bool","timer_integer","flags","dateactivate","dateupdate","onRemove","isEdit","onEdit","onCancel","console","dir","onSave","nameField","emailField","configField","timerField","flagsField","dispatch","getNameref","getEmailref","getConfigref","getTimerref","getflagsref","node"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './style.css'\nimport editUser from '../../Redux/Actions/EditUser'\n\nconst User = ({store, id, name, email, config_bool, timer_integer, flags, dateactivate, dateupdate, onRemove, isEdit, onEdit,  onCancel})=>{\n   console.dir(isEdit)\n\n   const onSave = ()=>{\n      const {nameField, emailField,configField,timerField,flagsField} = this\n      store.dispatch(\n         editUser(nameField,emailField,configField,timerField,flagsField)\n      )\n   }\n\n   const {getNameref, }=this\n   return (\n      <div className='card-user'>\n               <div className='item'>\n                  <div>{id}</div>\n               </div>\n               <div className='item'>\n                  <div hidden={isEdit}>{name}</div>\n                  <input ref={getNameref} type=\"text\" size='5' hidden={!isEdit} placeholder={name}></input>\n               </div>\n               <div className='item' >\n                  <div hidden={isEdit}>{email}</div>\n                  <input ref={getEmailref} type=\"text\" size='10' hidden={!isEdit}></input>\n               </div>\n               <div className='item' >\n                  <div hidden={isEdit}>{config_bool}</div>\n                  <input ref={getConfigref} type=\"text\" size='5' hidden={!isEdit}></input>\n               </div>\n               <div className='item' >\n                  <div hidden={isEdit}>{timer_integer}</div>\n                  <input ref={getTimerref} type=\"text\" size='5' hidden={!isEdit}></input>\n               </div>\n               <div className='item'>\n                  <div hidden={isEdit}>{flags}</div>\n                  <input ref={getflagsref} type=\"text\" size='5' hidden={!isEdit}></input>\n               </div>\n               <div className='item' >\n                  <div>{dateactivate}</div>\n               </div>\n               <div className='item' >\n                  <div>{dateupdate}</div>\n               </div>\n               <button className='item' onClick={isEdit?onSave:onEdit}>{isEdit?'Save':'Edit'}</button> \n               <button className='item' onClick={isEdit?onCancel:onRemove}>{isEdit?'Cancel':'Delete'}</button>\n            </div>\n   )\n}\n\n\n//User.getIdref = (node)=>{this.idField=node}\nUser.getNameref= (node)=>{this.nameField=node}\nUser.getEmailref= (node)=>{this.emailField=node}\nUser.getConfigref= (node)=>{this.configField=node}\nUser.getTimerref= (node)=>{this.timerField=node}\nUser.getflagsref= (node)=>{this.flagsField=node}\n\n// function onSave(){\n\n// }\n\n// class Color extends Component{\n\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             isEdit:false\n//         }\n\n//         this.onEdit=this.onEdit.bind(this)\n//         this.onSave=this.onSave.bind(this)\n//         this.onСancel=this.onСancel.bind(this)\n//     }\n\n//     getIdref = (node)=>{this.idField=node}\n//     getNameref= (node)=>{this.nameField=node}\n//     getEmailref= (node)=>{this.emailField=node}\n//     getConfigref= (node)=>{this.configField=node}\n//     getTimerref= (node)=>{this.timerField=node}\n//     getflagsref= (node)=>{this.flagsField=node}\n    \n//     onEdit(){\n//         const { nameField, emailField, configField,timerField,flagsField} = this\n//         const { name, email, config_bool, timer_integer, flags} = this.props\n        \n//         nameField.value = name\n//         emailField.value = email\n//         configField.value = config_bool\n//         timerField.value = timer_integer\n//         flagsField.value = flags\n\n//         this.setState({isEdit:true})\n//     }\n\n//     onSave(){\n//         const {id, onSave} = this.props\n//         const {nameField, emailField, configField,timerField,flagsField} = this\n//         onSave({\n//             id:id,\n//             name:nameField.value,\n//             email:emailField.value,\n//             config_bool:configField.value,\n//             timer_integer:timerField.value,\n//             flags:flagsField.value,\n//             dateactivate:new Date().toGMTString(),\n//             dateupdate:new Date().toGMTString()\n//         })\n//         this.setState({isEdit:false})\n//     }\n\n//     onСancel(){\n//         this.setState({isEdit:false})\n//     }\n\n\n\n//     render(){\n//         const {onEdit, onSave, onСancel, getNameref, getEmailref, getConfigref, getTimerref, getflagsref} = this\n//         const {isEdit} = this.state\n//         const {id, name, email, config_bool, timer_integer, flags, dateactivate, dateupdate, onRemove} = this.props\n//         return(\n//             <div className='card-user'>\n//                 <div className='item'>\n//                     <div>{id}</div>\n//                 </div>\n//                 <div className='item'>\n//                     <div hidden={isEdit}>{name}</div>\n//                     <input ref={getNameref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{email}</div>\n//                     <input ref={getEmailref} type=\"text\" size='10' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{config_bool}</div>\n//                     <input ref={getConfigref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{timer_integer}</div>\n//                     <input ref={getTimerref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{flags}</div>\n//                     <input ref={getflagsref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateactivate}</div>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateupdate}</div>\n//                 </div>\n//                 <button className='item' onClick={isEdit?onSave:onEdit}>{isEdit?'Save':'Edit'}</button> \n//                 <button className='item' onClick={isEdit?onСancel:onRemove}>{isEdit?'Cancel':'Delete'}</button>\n//             </div>\n//         )\n//     }\n// }\n\n\n//Old vers\n// const Color = ({id, name, email, onRemove=f=>f})=>\n//     <div className='card-user'>\n//         <div className='item'>{id}</div>\n//         <div className='item'>{name}</div>\n//         <div className='item' >{email}</div>\n//         <button className='item'>Edit</button> \n//         <button className='item' onClick={onRemove}>Delete</button>\n//     </div>\n\nexport default User "]},"metadata":{},"sourceType":"module"}