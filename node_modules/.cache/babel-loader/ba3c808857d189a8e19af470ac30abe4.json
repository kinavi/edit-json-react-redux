{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport Users from '../Reducers/Users';\nimport stateData from '../../../Data/userApi.json'; // const logger = store => next => action => {\n//     let result\n//     console.groupCollapsed(\"dispatching\", action.type)\n//     console.log('prev state', store.getState())\n//     console.log('action', action)\n//     result = next(action)\n//     console.log('next state', store.getState())\n//     console.groupEnd()\n//     }\n// const saver = store => next => action => {\n//     let result = next(action)\n//     localStorage['redux-store'] = JSON.stringify(store.getState())\n//     return result\n//     }\n\nconst storeFactory = () => {\n  //console.log(stateData)    \n  const initialState = {\n    Users: JSON.parse(stateData)\n  };\n  console.log(initialState);\n  createStore(combineReducers({\n    Users\n  }), initialState);\n};\n\nfunction IsJsonString(str) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n} // applyMiddleware(logger, saver)(createStore)(\n// combineReducers({Users}),\n// (localStorage['redux-store']) ?\n// JSON.parse(localStorage['redux-store']) :\n// stateData\n// )\n\n\nexport default storeFactory;","map":{"version":3,"sources":["/home/vm/test_work/src/Components/Redux/Store/index.js"],"names":["createStore","combineReducers","applyMiddleware","Users","stateData","storeFactory","initialState","JSON","parse","console","log","IsJsonString","str","e"],"mappings":"AAAA,SAASA,WAAT,EACIC,eADJ,EAEIC,eAFJ,QAE2B,OAF3B;AAGA,OAAOC,KAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,4BAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,MAAK;AACtB;AACA,QAAMC,YAAY,GAAG;AACjBH,IAAAA,KAAK,EAACI,IAAI,CAACC,KAAL,CAAWJ,SAAX;AADW,GAArB;AAGAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACAN,EAAAA,WAAW,CACXC,eAAe,CAAC;AAAEE,IAAAA;AAAF,GAAD,CADJ,EAEXG,YAFW,CAAX;AAIH,CAVD;;AAaA,SAASK,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,MAAI;AACAL,IAAAA,IAAI,CAACC,KAAL,CAAWI,GAAX;AACH,GAFD,CAEE,OAAOC,CAAP,EAAU;AACR,WAAO,KAAP;AACH;;AACD,SAAO,IAAP;AACH,C,CACG;AACA;AACA;AACA;AACA;AACA;;;AACJ,eAAeR,YAAf","sourcesContent":["import { createStore,\n    combineReducers,\n    applyMiddleware } from 'redux'\nimport Users  from '../Reducers/Users'\nimport stateData from '../../../Data/userApi.json'\n\n// const logger = store => next => action => {\n//     let result\n//     console.groupCollapsed(\"dispatching\", action.type)\n//     console.log('prev state', store.getState())\n//     console.log('action', action)\n//     result = next(action)\n//     console.log('next state', store.getState())\n//     console.groupEnd()\n//     }\n// const saver = store => next => action => {\n//     let result = next(action)\n//     localStorage['redux-store'] = JSON.stringify(store.getState())\n//     return result\n//     }\n\nconst storeFactory = () =>{\n    //console.log(stateData)    \n    const initialState = {\n        Users:JSON.parse(stateData)\n    }\n    console.log(initialState)\n    createStore(\n    combineReducers({ Users }),\n    initialState\n    )\n}\n\n\nfunction IsJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n    // applyMiddleware(logger, saver)(createStore)(\n    // combineReducers({Users}),\n    // (localStorage['redux-store']) ?\n    // JSON.parse(localStorage['redux-store']) :\n    // stateData\n    // )\nexport default storeFactory"]},"metadata":{},"sourceType":"module"}