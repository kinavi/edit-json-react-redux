{"ast":null,"code":"var _jsxFileName = \"/home/vm/\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438/test_work/src/Components/React/InputField/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AddUser from '../../Redux/Actions/AddUser'; // class InputField extends Component{\n//     constructor(props) {\n//         super(props)\n//         this.state={\n//             //value:'',\n//             strLog:'',\n//             isHide:props.isHide,\n//         }\n//         this.onChange=this.onChange.bind(this)\n//         this.switchHide=this.switchHide.bind(this)\n//         this.cleartextarea=this.cleartextarea.bind(this)\n//     }\n//     switchHide() {\n//         const {isHide} = this.state\n//         console.log(!isHide)\n//         this.setState({isHide:!isHide})\n//     }\n//     static propTypes = {\n//         strInput:PropTypes.string,\n//         strLog:PropTypes.string,\n//         isHide:PropTypes.bool\n//     }\n//     onChange(){\n//         const {value} = this.textarea\n//         const {onSetCards} = this.props\n//         const {switchHide,cleartextarea} = this\n//         if(IsJsonString(value)){\n//             const json = JSON.parse(value)\n//             cleartextarea()\n//             onSetCards(json)\n//             switchHide()\n//         }\n//         else if(value!=='')\n//         {\n//             this.setState({strLog:'Не верный формат!'})\n//         }\n//         else\n//             this.setState({strLog:''})     \n//     }\n//     getInputRef = (node)=>{this.textarea=node}\n//     cleartextarea = () => {this.textarea.value=''}\n//     render(){\n//         const {getInputRef, onChange, switchHide} = this\n//         const {strLog, isHide} = this.state\n//         return(\n//             <div>\n//                 <div hidden={isHide}>\n//                     <button onClick={switchHide}>Ввод данных</button>\n//                 </div>\n//                 <div hidden={!isHide}>\n//                     <div>Ведите данные JSON: </div>\n//                     <textarea ref={getInputRef} onInput={onChange} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n//                     <div>{strLog}</div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\nfunction IsJsonString(str) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n} // Old Ver.\n//()=>setCardsParseJSON(this._ref.value)\n\n\nconst InputField = ({\n  store\n}) => {\n  let tafield;\n\n  const onAddUser = () => {\n    console.log(tafield); //(id, name, email, config, timer, flags, dateactivate)\n\n    if (IsJsonString(tafield.value)) {\n      const reasul = JSON.parse(tafield.value);\n      console.log(reasul);\n      if (Array.isArray(reasul)) reasul.map(u => store.dispatch(AddUser(u.id, u.name, u.email, u.config, u.timer, u.flags, u.dateactivate)));else store.dispatch(AddUser(reasul.id, reasul.name, reasul.email, reasul.config, reasul.timer, reasul.flags, reasul.dateactivate));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"\\u0412\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 JSON: \"), React.createElement(\"textarea\", {\n    ref: ta => tafield = ta,\n    name: \"comment\",\n    cols: \"40\",\n    rows: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onAddUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Add\"), React.createElement(\"div\", {\n    hidden: !IsJsonString(this.tafield.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0432\\u0432\\u043E\\u0434\\u0430\"));\n};\n\nexport default InputField;","map":{"version":3,"sources":["/home/vm/Загрузки/test_work/src/Components/React/InputField/index.js"],"names":["React","Component","PropTypes","AddUser","IsJsonString","str","JSON","parse","e","InputField","store","tafield","onAddUser","console","log","value","reasul","Array","isArray","map","u","dispatch","id","name","email","config","timer","flags","dateactivate","ta"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,6BAApB,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,MAAI;AACAC,IAAAA,IAAI,CAACC,KAAL,CAAWF,GAAX;AACH,GAFD,CAEE,OAAOG,CAAP,EAAU;AACR,WAAO,KAAP;AACH;;AACD,SAAO,IAAP;AACH,C,CAED;AACA;;;AACA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAC1B,MAAIC,OAAJ;;AAEA,QAAMC,SAAS,GAAC,MAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EADgB,CAEhB;;AACA,QAAGP,YAAY,CAACO,OAAO,CAACI,KAAT,CAAf,EACA;AACI,YAAMC,MAAM,GAAGV,IAAI,CAACC,KAAL,CAAWI,OAAO,CAACI,KAAnB,CAAf;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACA,UAAGC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAH,EACIA,MAAM,CAACG,GAAP,CAAWC,CAAC,IACRV,KAAK,CAACW,QAAN,CACIlB,OAAO,CACHiB,CAAC,CAACE,EADC,EAEHF,CAAC,CAACG,IAFC,EAGHH,CAAC,CAACI,KAHC,EAIHJ,CAAC,CAACK,MAJC,EAKHL,CAAC,CAACM,KALC,EAMHN,CAAC,CAACO,KANC,EAOHP,CAAC,CAACQ,YAPC,CADX,CADJ,EADJ,KAgBIlB,KAAK,CAACW,QAAN,CACIlB,OAAO,CACHa,MAAM,CAACM,EADJ,EAEHN,MAAM,CAACO,IAFJ,EAGHP,MAAM,CAACQ,KAHJ,EAIHR,MAAM,CAACS,MAJJ,EAKHT,MAAM,CAACU,KALJ,EAMHV,MAAM,CAACW,KANJ,EAOHX,MAAM,CAACY,YAPJ,CADX;AAWP;AACJ,GAnCD;;AAqCA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFADJ,EAEI;AAAU,IAAA,GAAG,EAAEC,EAAE,IAAElB,OAAO,GAACkB,EAA3B;AAA+B,IAAA,IAAI,EAAC,SAApC;AAA8C,IAAA,IAAI,EAAC,IAAnD;AAAwD,IAAA,IAAI,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,OAAO,EAAEjB,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,EAII;AAAK,IAAA,MAAM,EAAE,CAACR,YAAY,CAAC,KAAKO,OAAL,CAAaI,KAAd,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAJJ,CADJ;AAQH,CAhDD;;AAkDA,eAAeN,UAAf","sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from 'prop-types'\nimport AddUser from '../../Redux/Actions/AddUser'\n\n\n// class InputField extends Component{\n\n//     constructor(props) {\n//         super(props)\n//         this.state={\n//             //value:'',\n//             strLog:'',\n//             isHide:props.isHide,\n//         }\n//         this.onChange=this.onChange.bind(this)\n//         this.switchHide=this.switchHide.bind(this)\n//         this.cleartextarea=this.cleartextarea.bind(this)\n//     }\n\n//     switchHide() {\n        \n//         const {isHide} = this.state\n//         console.log(!isHide)\n//         this.setState({isHide:!isHide})\n//     }\n\n//     static propTypes = {\n//         strInput:PropTypes.string,\n//         strLog:PropTypes.string,\n//         isHide:PropTypes.bool\n//     }\n\n//     onChange(){\n//         const {value} = this.textarea\n//         const {onSetCards} = this.props\n//         const {switchHide,cleartextarea} = this\n//         if(IsJsonString(value)){\n//             const json = JSON.parse(value)\n//             cleartextarea()\n//             onSetCards(json)\n//             switchHide()\n//         }\n//         else if(value!=='')\n//         {\n//             this.setState({strLog:'Не верный формат!'})\n//         }\n//         else\n//             this.setState({strLog:''})     \n//     }\n\n//     getInputRef = (node)=>{this.textarea=node}\n//     cleartextarea = () => {this.textarea.value=''}\n\n//     render(){\n//         const {getInputRef, onChange, switchHide} = this\n//         const {strLog, isHide} = this.state\n//         return(\n//             <div>\n//                 <div hidden={isHide}>\n//                     <button onClick={switchHide}>Ввод данных</button>\n//                 </div>\n//                 <div hidden={!isHide}>\n//                     <div>Ведите данные JSON: </div>\n//                     <textarea ref={getInputRef} onInput={onChange} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n//                     <div>{strLog}</div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\nfunction IsJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n// Old Ver.\n//()=>setCardsParseJSON(this._ref.value)\nconst InputField = ({store})=>{\n    let tafield\n\n    const onAddUser=()=>{\n        console.log(tafield)\n        //(id, name, email, config, timer, flags, dateactivate)\n        if(IsJsonString(tafield.value))\n        {\n            const reasul = JSON.parse(tafield.value)\n            console.log(reasul)\n            if(Array.isArray(reasul))\n                reasul.map(u=>\n                    store.dispatch(\n                        AddUser(\n                            u.id,\n                            u.name,\n                            u.email,\n                            u.config,\n                            u.timer,\n                            u.flags,\n                            u.dateactivate\n                        )\n                    )\n                )\n\n            else\n                store.dispatch(\n                    AddUser(\n                        reasul.id,\n                        reasul.name,\n                        reasul.email,\n                        reasul.config,\n                        reasul.timer,\n                        reasul.flags,\n                        reasul.dateactivate\n                    )\n                )         \n        }\n    }\n\n    return(\n        <div>\n            <div>Ведите данные JSON: </div>\n            <textarea ref={ta=>tafield=ta} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n            <button onClick={onAddUser}>Add</button>\n            <div hidden={!IsJsonString(this.tafield.value)}>Ошибка ввода</div>\n        </div>\n    )\n}\n\nexport default InputField"]},"metadata":{},"sourceType":"module"}