{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport Users from '../Reducers/Users';\nimport stateData from '../../../Data/userApi.json'; // const logger = store => next => action => {\n//     let result\n//     console.groupCollapsed(\"dispatching\", action.type)\n//     console.log('prev state', store.getState())\n//     console.log('action', action)\n//     result = next(action)\n//     console.log('next state', store.getState())\n//     console.groupEnd()\n//     }\n// const saver = store => next => action => {\n//     let result = next(action)\n//     localStorage['redux-store'] = JSON.stringify(store.getState())\n//     return result\n//     }\n\nconst storeFactory = () => console.log(stateData);\n\nconst initialState = {\n  Users: JSON.parse(stateData)\n};\nconsole.log(initialState);\ncreateStore(combineReducers({\n  Users\n}), initialState); // function IsJsonString(str) {\n//     try {\n//         JSON.parse(str);\n//     } catch (e) {\n//         return false;\n//     }\n//     return true;\n// }\n// applyMiddleware(logger, saver)(createStore)(\n// combineReducers({Users}),\n// (localStorage['redux-store']) ?\n// JSON.parse(localStorage['redux-store']) :\n// stateData\n// )\n\nexport default storeFactory;","map":{"version":3,"sources":["/home/vm/test_work/src/Components/Redux/Store/index.js"],"names":["createStore","combineReducers","applyMiddleware","Users","stateData","storeFactory","console","log","initialState","JSON","parse"],"mappings":"AAAA,SAASA,WAAT,EACIC,eADJ,EAEIC,eAFJ,QAE2B,OAF3B;AAGA,OAAOC,KAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,4BAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,MACjBC,OAAO,CAACC,GAAR,CAAYH,SAAZ,CADJ;;AAEI,MAAMI,YAAY,GAAG;AACjBL,EAAAA,KAAK,EAACM,IAAI,CAACC,KAAL,CAAWN,SAAX;AADW,CAArB;AAGAE,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAR,WAAW,CACXC,eAAe,CAAC;AAAEE,EAAAA;AAAF,CAAD,CADJ,EAEXK,YAFW,CAAX,C,CAOJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;;AACJ,eAAeH,YAAf","sourcesContent":["import { createStore,\n    combineReducers,\n    applyMiddleware } from 'redux'\nimport Users  from '../Reducers/Users'\nimport stateData from '../../../Data/userApi.json'\n\n// const logger = store => next => action => {\n//     let result\n//     console.groupCollapsed(\"dispatching\", action.type)\n//     console.log('prev state', store.getState())\n//     console.log('action', action)\n//     result = next(action)\n//     console.log('next state', store.getState())\n//     console.groupEnd()\n//     }\n// const saver = store => next => action => {\n//     let result = next(action)\n//     localStorage['redux-store'] = JSON.stringify(store.getState())\n//     return result\n//     }\n\nconst storeFactory = () =>\n    console.log(stateData)    \n    const initialState = {\n        Users:JSON.parse(stateData)\n    }\n    console.log(initialState)\n    createStore(\n    combineReducers({ Users }),\n    initialState\n    )\n\n\n\n// function IsJsonString(str) {\n//     try {\n//         JSON.parse(str);\n//     } catch (e) {\n//         return false;\n//     }\n//     return true;\n// }\n    // applyMiddleware(logger, saver)(createStore)(\n    // combineReducers({Users}),\n    // (localStorage['redux-store']) ?\n    // JSON.parse(localStorage['redux-store']) :\n    // stateData\n    // )\nexport default storeFactory"]},"metadata":{},"sourceType":"module"}