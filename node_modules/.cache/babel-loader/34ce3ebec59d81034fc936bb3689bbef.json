{"ast":null,"code":"var _jsxFileName = \"/home/vm/simple_build_facebook/src/Components/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList'; //\n\nimport userApi from '../Data/userApi.json';\nimport PropTypes from 'prop-types';\nimport InputField from './InputField';\nimport OutputField from './outputField';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: [],\n      isHide: false\n    };\n    this.removeCard = this.removeCard.bind(this);\n    this.setCards = this.setCards.bind(this);\n  }\n\n  setCards(card) {\n    const cards = this.state.cards;\n    if (Array.isArray(card)) //тут косяк. Надо доплнять массив, а не подменять) \n      this.setState({\n        cards: card\n      });else {\n      if (!IsConcatId(card, cards)) {\n        let newstate = [...cards, card];\n        this.setState({\n          cards: newstate\n        });\n      }\n    }\n  } // outputCard(){\n  //     const {cards} = this.state\n  // }\n  //JSON.stringify\n  // componentDidMount(){\n  //     console.log(this.refs._ref.value);\n  // }\n  // shouldComponentUpdate(nextState){\n  //     const { cards } = this.nextState\n  //     return cards !== nextState.cards\n  // }\n  // componentWillReceiveProps(nextProps){\n  // }\n\n\n  removeCard(id) {\n    const cards = this.state.cards.filter(card => card.id !== id);\n    this.setState({\n      cards\n    });\n  }\n\n  render() {\n    const removeCard = this.removeCard,\n          setCards = this.setCards;\n    const _this$state = this.state,\n          cards = _this$state.cards,\n          strLog = _this$state.strLog; //const { _ta } = this.refs\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      isHide: false,\n      onSetCards: setCards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      list: cards,\n      onRemove: removeCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Add user\"), React.createElement(OutputField, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nApp.propTypes = {\n  cards: PropTypes.array,\n  isHide: PropTypes.bool\n};\n\nfunction IsConcatId(obj, arr) {\n  for (let elem of arr) {\n    if (obj.id == elem.id) return true;\n  }\n\n  return false;\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vm/simple_build_facebook/src/Components/App.js"],"names":["React","Component","CardList","userApi","PropTypes","InputField","OutputField","App","constructor","props","state","cards","isHide","removeCard","bind","setCards","card","Array","isArray","setState","IsConcatId","newstate","id","filter","render","strLog","propTypes","array","bool","obj","arr","elem"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAExBO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,MAAM,EAAC;AAFE,KAAb;AAIA,SAAKC,UAAL,GAAgB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAhB;AACA,SAAKC,QAAL,GAAc,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAd;AACH;;AAODC,EAAAA,QAAQ,CAACC,IAAD,EAAM;AAAA,UAEHL,KAFG,GAEM,KAAKD,KAFX,CAEHC,KAFG;AAGV,QAAGM,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAH,EAAwB;AACpB,WAAKG,QAAL,CAAc;AAACR,QAAAA,KAAK,EAACK;AAAP,OAAd,EADJ,KAGA;AACI,UAAG,CAACI,UAAU,CAACJ,IAAD,EAAML,KAAN,CAAd,EACA;AACI,YAAIU,QAAQ,GAAG,CAAC,GAAGV,KAAJ,EAAUK,IAAV,CAAf;AACA,aAAKG,QAAL,CAAc;AAACR,UAAAA,KAAK,EAACU;AAAP,SAAd;AACH;AACJ;AACJ,GA9BuB,CAgCxB;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;;;AAKAR,EAAAA,UAAU,CAACS,EAAD,EACV;AACI,UAAMX,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBY,MAAjB,CACVP,IAAI,IAAEA,IAAI,CAACM,EAAL,KAAYA,EADR,CAAd;AAGA,SAAKH,QAAL,CAAc;AAACR,MAAAA;AAAD,KAAd;AACH;;AAEDa,EAAAA,MAAM,GAAG;AAAA,UACEX,UADF,GACwB,IADxB,CACEA,UADF;AAAA,UACcE,QADd,GACwB,IADxB,CACcA,QADd;AAAA,wBAEqB,KAAKL,KAF1B;AAAA,UAEGC,KAFH,eAEGA,KAFH;AAAA,UAEUc,MAFV,eAEUA,MAFV,EAGL;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,KAApB;AAA2B,MAAA,UAAU,EAAEV,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEJ,KAAhB;AAAuB,MAAA,QAAQ,EAAEE,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AASH;;AA3EuB;;AAAtBN,G,CAYKmB,S,GAAY;AACff,EAAAA,KAAK,EAACP,SAAS,CAACuB,KADD;AAEff,EAAAA,MAAM,EAACR,SAAS,CAACwB;AAFF,C;;AAkEvB,SAASR,UAAT,CAAoBS,GAApB,EAAwBC,GAAxB,EACA;AACI,OAAK,IAAIC,IAAT,IAAiBD,GAAjB,EACA;AACI,QAAGD,GAAG,CAACP,EAAJ,IAAQS,IAAI,CAACT,EAAhB,EACI,OAAO,IAAP;AACP;;AACG,SAAO,KAAP;AACP;;AAID,eAAef,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport CardList from './CardList'\n//\nimport userApi from '../Data/userApi.json'\nimport PropTypes from 'prop-types'\nimport InputField from './InputField'\nimport OutputField from './outputField'\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            cards: [],\n            isHide:false\n        }\n        this.removeCard=this.removeCard.bind(this)\n        this.setCards=this.setCards.bind(this)\n    }\n\n    static propTypes = {\n        cards:PropTypes.array,\n        isHide:PropTypes.bool\n    }\n\n    setCards(card){\n\n        const {cards} = this.state\n        if(Array.isArray(card)) //тут косяк. Надо доплнять массив, а не подменять) \n            this.setState({cards:card})\n        else\n        {\n            if(!IsConcatId(card,cards))\n            {\n                let newstate = [...cards,card]\n                this.setState({cards:newstate})\n            }\n        }\n    }\n\n    // outputCard(){\n    //     const {cards} = this.state\n    // }\n    //JSON.stringify\n\n    // componentDidMount(){\n    //     console.log(this.refs._ref.value);\n    // }\n\n\n    // shouldComponentUpdate(nextState){\n    //     const { cards } = this.nextState\n    //     return cards !== nextState.cards\n    // }\n\n    // componentWillReceiveProps(nextProps){\n\n    // }\n\n\n   \n\n    removeCard(id)\n    {\n        const cards = this.state.cards.filter(\n            card=>card.id !== id\n        )\n        this.setState({cards})\n    }\n\n    render() {\n        const {removeCard, setCards}=this\n        const { cards, strLog } = this.state\n        //const { _ta } = this.refs\n        return(\n            <div>\n                <InputField isHide={false} onSetCards={setCards}/>\n                <CardList list={cards} onRemove={removeCard}/>\n                <button>Add user</button>\n                <OutputField/>\n            </div>\n            \n        )\n    }\n}\n\nfunction IsConcatId(obj,arr)\n{   \n    for (let elem of arr)\n    {\n        if(obj.id==elem.id)\n            return true\n    }\n        return false\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}