{"ast":null,"code":"var _jsxFileName = \"/home/vm/simple_build_facebook/src/Components/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport userApi from '../Data/userApi.json';\nimport PropTypes from 'prop-types';\nimport InputField from './InputField';\nimport OutputField from './outputField';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: userApi,\n      isHide: false,\n      freeId: 0,\n      lastId: 0\n    };\n    this.removeCard = this.removeCard.bind(this);\n    this.setCards = this.setCards.bind(this);\n    this.addCard = this.addCard.bind(this);\n    this.changeCard = this.changeCard.bind(this);\n    this.getFreeId = this.getFreeId.bind(this);\n    this.setLastId = this.setLastId.bind(this);\n    this.setFreeId = this.setFreeId.bind(this);\n  }\n\n  setCards(card) {\n    //console.dir(card)\n    const addCard = this.addCard;\n    const cards = this.state.cards;\n    if (Array.isArray(card)) //тут косяк. Надо доплнять массив, а не подменять) \n      this.setState({\n        cards: card\n      });else {\n      if (!IsConcatId(card, cards)) addCard(card, cards);\n    }\n    this.setFreeId();\n  }\n\n  setLastId() {\n    const cards = this.state.cards;\n    let lastId = +cards.slice(-1).id;\n    console.log(typeof lastId);\n    this.setState({\n      lastId: lastId\n    });\n  } // componentWillUpdate(nextProps, nextState){\n  //     console.log('До обновления')\n  //     if(this.state.lastId!==nextState.lastId)\n  //         this.setLastId();\n  // }\n  // componentDidUpdate(){\n  //     console.log('После обновления')\n  //     this.setFreeId();\n  // }\n\n\n  setFreeId() {\n    const _this$state = this.state,\n          lastId = _this$state.lastId,\n          cards = _this$state.cards;\n    console.dir(\"\".concat(this.state, \" - setState\"));\n    console.dir(\"\".concat(cards, \" - cards\"));\n    this.setLastId();\n    let freeId = GeneratorId(lastId, cards);\n    console.dir(\"\".concat(freeId, \" - freeId\"));\n    this.setState({\n      freeId\n    });\n  }\n\n  getFreeId() {\n    const freeId = this.state.freeId;\n    return freeId;\n  } // outputCard(){\n  //     const {cards} = this.state\n  // }\n  //JSON.stringify\n  // componentDidMount(){\n  //     console.log(this.refs._ref.value);\n  // }\n  // shouldComponentUpdate(nextState){\n  //     const { cards } = this.nextState\n  //     return cards !== nextState.cards\n  // }\n  // componentWillReceiveProps(nextProps){\n  // }\n  //setLastId\n  // GeneratorId(lastId) {\n  //     const {cards} = this.state\n  //     if(IsConcatId(++lastId, cards))\n  //         GeneratorId(lastId)\n  //     else return lastId;\n  // }\n\n\n  addCard(value, arr) {\n    this.setState({\n      cards: [...arr, value]\n    });\n    this.setFreeId();\n  }\n\n  changeCard(value) {\n    //console.log(2)\n    //console.dir(value)\n    const cards = this.state.cards;\n\n    for (let card of cards) {\n      //console.log(value)\n      if (card.id === value.id) {\n        //console.dir(card)\n        for (let key in card) {\n          card[key] = value[key]; //console.log(`card: ${card[key]} = value: ${value[key]}`)\n        }\n\n        this.setState({\n          cards\n        });\n      }\n    }\n\n    this.setFreeId();\n  }\n\n  removeCard(id) {\n    const cards = this.state.cards.filter(card => card.id !== id);\n    this.setState({\n      cards\n    });\n    this.setFreeId();\n  }\n\n  render() {\n    const removeCard = this.removeCard,\n          setCards = this.setCards,\n          changeCard = this.changeCard,\n          getFreeId = this.getFreeId;\n    const cards = this.state.cards;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      isHide: false,\n      onSetCards: setCards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      fuAddCard: setCards,\n      list: cards,\n      onRemove: removeCard,\n      isHide: cards.length > 0 ? false : true,\n      Save: changeCard,\n      freeId: getFreeId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(OutputField, {\n      isHide: cards.length > 0 ? false : true,\n      value: cards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }));\n  }\n\n}\n\nApp.propTypes = {\n  cards: PropTypes.array,\n  isHide: PropTypes.bool,\n  freeId: PropTypes.number,\n  lastId: PropTypes.number\n};\n\nfunction GeneratorId(lastId, cards) {\n  console.dir(cards);\n  if (IsConcatId(++lastId, cards)) GeneratorId(+lastId);else return +lastId;\n}\n\nfunction IsConcatId(obj, cards) {\n  // if(typeof obj === 'object')\n  // {\n  //     for (let elem of arr)\n  //     {\n  //         if(obj.id==elem.id)\n  //             return true\n  //     }\n  //     return false\n  // }\n  // else{\n  //     for (let elem of arr)\n  //     {\n  //         if(id==elem.id)\n  //             return true\n  //     }\n  //     return false\n  // }\n  console.dir(cards);\n\n  for (let elem of cards) {\n    if (typeof obj === 'object') {\n      if (obj.id === elem.id) return true;\n    } else {\n      if (obj === elem.id) return true;\n    }\n  }\n\n  return false;\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vm/simple_build_facebook/src/Components/App.js"],"names":["React","Component","CardList","userApi","PropTypes","InputField","OutputField","App","constructor","props","state","cards","isHide","freeId","lastId","removeCard","bind","setCards","addCard","changeCard","getFreeId","setLastId","setFreeId","card","Array","isArray","setState","IsConcatId","slice","id","console","log","dir","GeneratorId","value","arr","key","filter","render","length","propTypes","array","bool","number","obj","elem"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport CardList from './CardList'\nimport userApi from '../Data/userApi.json'\nimport PropTypes from 'prop-types'\nimport InputField from './InputField'\nimport OutputField from './outputField'\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            cards: userApi,\n            isHide:false,\n            freeId:0,\n            lastId:0\n        }\n        this.removeCard=this.removeCard.bind(this)\n        this.setCards=this.setCards.bind(this)\n        this.addCard=this.addCard.bind(this)\n        this.changeCard=this.changeCard.bind(this)\n        this.getFreeId = this.getFreeId.bind(this)\n        this.setLastId = this.setLastId.bind(this)\n        this.setFreeId = this.setFreeId.bind(this)\n    }\n\n    static propTypes = {\n        cards:PropTypes.array,\n        isHide:PropTypes.bool,\n        freeId:PropTypes.number,\n        lastId:PropTypes.number\n    }\n\n    setCards(card){\n        //console.dir(card)\n        const {addCard} = this\n        const {cards} = this.state\n        if(Array.isArray(card)) //тут косяк. Надо доплнять массив, а не подменять) \n            this.setState({cards:card})\n        else\n        {\n\n            if(!IsConcatId(card,cards))\n                addCard(card, cards)\n        }\n        this.setFreeId();\n    }\n\n    setLastId(){\n        const {cards} = this.state\n        let lastId = +cards.slice(-1).id\n        console.log(typeof lastId)\n        this.setState({lastId:lastId})\n    }\n\n    // componentWillUpdate(nextProps, nextState){\n    //     console.log('До обновления')\n    //     if(this.state.lastId!==nextState.lastId)\n    //         this.setLastId();\n    // }\n\n    // componentDidUpdate(){\n    //     console.log('После обновления')\n    //     this.setFreeId();\n    // }\n\n    setFreeId(){\n        const {lastId, cards} = this.state\n        console.dir(`${this.state} - setState`)\n        console.dir(`${cards} - cards`)\n        this.setLastId();\n        let freeId = GeneratorId(lastId, cards)\n        console.dir(`${freeId} - freeId`)\n        this.setState({freeId})\n    }\n\n    getFreeId(){\n        const {freeId} = this.state\n        return freeId\n    }\n    // outputCard(){\n    //     const {cards} = this.state\n    // }\n    //JSON.stringify\n\n    // componentDidMount(){\n    //     console.log(this.refs._ref.value);\n    // }\n\n\n    // shouldComponentUpdate(nextState){\n    //     const { cards } = this.nextState\n    //     return cards !== nextState.cards\n    // }\n\n    // componentWillReceiveProps(nextProps){\n\n    // }\n\n    //setLastId\n\n    // GeneratorId(lastId) {\n    //     const {cards} = this.state\n\n    //     if(IsConcatId(++lastId, cards))\n    //         GeneratorId(lastId)\n    //     else return lastId;\n    // }\n\n    addCard(value, arr)\n    {\n        this.setState({cards:[...arr,value]})\n        this.setFreeId();\n    }\n\n    changeCard(value)\n    {\n        //console.log(2)\n        //console.dir(value)\n        const {cards} = this.state\n\n        for (let card of cards)\n        {\n            //console.log(value)\n            if(card.id===value.id)\n            {\n                //console.dir(card)\n                for (let key in card){\n                    card[key]=value[key]\n                    //console.log(`card: ${card[key]} = value: ${value[key]}`)\n                }\n                this.setState({cards})\n            }\n        }\n        this.setFreeId();\n    }\n\n    removeCard(id)\n    {\n        const cards = this.state.cards.filter(\n            card=>card.id !== id\n        )\n        this.setState({cards})\n        this.setFreeId();\n    }\n\n    render() {\n        const {removeCard, setCards, changeCard,getFreeId}=this\n        const { cards } = this.state\n        return(\n            <div>\n                <InputField isHide={false} onSetCards={setCards}/>\n                <CardList fuAddCard = {setCards} list={cards} onRemove={removeCard} isHide={cards.length>0?false:true} Save = {changeCard} freeId = {getFreeId} />\n                \n                <OutputField isHide={cards.length>0?false:true} value={cards}/>\n            </div>\n            \n        )\n    }\n}\n\nfunction GeneratorId(lastId, cards) {\n    console.dir(cards)\n    if(IsConcatId(++lastId, cards))\n        GeneratorId(+lastId)\n    else return +lastId;\n}\n\nfunction IsConcatId(obj,cards)\n{   \n    // if(typeof obj === 'object')\n    // {\n    //     for (let elem of arr)\n    //     {\n    //         if(obj.id==elem.id)\n    //             return true\n    //     }\n    //     return false\n    // }\n    // else{\n    //     for (let elem of arr)\n    //     {\n    //         if(id==elem.id)\n    //             return true\n    //     }\n    //     return false\n    // }\n\n    console.dir(cards)\n    for (let elem of cards)\n    {\n\n        if(typeof obj === 'object')\n        {\n            if(obj.id===elem.id)\n                return true\n        }  \n        else\n        {\n            if(obj===elem.id)\n                return true\n        }\n    }\n    return false\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}