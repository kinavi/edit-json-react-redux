{"ast":null,"code":"var _jsxFileName = \"/home/vm/\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438/test_work/src/Components/React/User/index.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport editUser from '../../Redux/Actions/EditUser';\nimport switchEditMode from '../../Redux/Actions/SwitchEditMode';\n\nconst User = ({\n  store,\n  id,\n  name,\n  email,\n  config_bool,\n  timer_integer,\n  flags,\n  dateactivate,\n  dateupdate,\n  onRemove,\n  isEdit\n}) => {\n  console.dir(isEdit);\n  let nameField, emailField, configField, timerField, flagsField, dateactivateField;\n\n  const onEdit = () => store.dispatch(switchEditMode(true, id));\n\n  const onCancel = () => store.dispatch(switchEditMode(false, id));\n\n  const onSave = () => {\n    //const {nameField, emailField,configField,timerField,flagsField,dateactivateField} = this\n    console.log(this);\n    store.dispatch(editUser(nameField.value, emailField.value, configField.value, timerField.value, flagsField.value, dateactivateField.value));\n    onCancel();\n  };\n\n  const getNameref = node => {\n    nameField = node;\n  };\n\n  const getEmailref = node => {\n    emailField = node;\n  };\n\n  const getConfigref = node => {\n    configField = node;\n  };\n\n  const getTimerref = node => {\n    timerField = node;\n  };\n\n  const getflagsref = node => {\n    flagsField = node;\n  };\n\n  const getDateActivateref = node => {\n    dateactivateField = node;\n  }; //const {getNameref, getEmailref, getConfigref, getTimerref, getflagsref, getDateActivateref}=this\n\n\n  return React.createElement(\"div\", {\n    className: \"card-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, id)), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, name), React.createElement(\"input\", {\n    ref: getNameref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    placeholder: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, email), React.createElement(\"input\", {\n    ref: getEmailref,\n    type: \"text\",\n    size: \"10\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, config_bool), React.createElement(\"input\", {\n    ref: getConfigref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, timer_integer), React.createElement(\"input\", {\n    ref: getTimerref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, flags), React.createElement(\"input\", {\n    ref: getflagsref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    hidden: isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, dateactivate), React.createElement(\"input\", {\n    ref: getDateActivateref,\n    type: \"text\",\n    size: \"5\",\n    hidden: !isEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, dateupdate)), React.createElement(\"button\", {\n    className: \"item\",\n    onClick: isEdit ? onSave : onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, isEdit ? 'Save' : 'Edit'), React.createElement(\"button\", {\n    className: \"item\",\n    onClick: isEdit ? onCancel : onRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, isEdit ? 'Cancel' : 'Delete'));\n}; //User.getIdref = (node)=>{this.idField=node}\n\n\nUser.getNameref = node => {\n  this.nameField = node;\n};\n\nUser.getEmailref = node => {\n  this.emailField = node;\n};\n\nUser.getConfigref = node => {\n  this.configField = node;\n};\n\nUser.getTimerref = node => {\n  this.timerField = node;\n};\n\nUser.getflagsref = node => {\n  this.flagsField = node;\n};\n\nUser.getDateActivateref = node => {\n  this.dateactivateField = node;\n}; // function onSave(){\n// }\n// class Color extends Component{\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             isEdit:false\n//         }\n//         this.onEdit=this.onEdit.bind(this)\n//         this.onSave=this.onSave.bind(this)\n//         this.onСancel=this.onСancel.bind(this)\n//     }\n//     getIdref = (node)=>{this.idField=node}\n//     getNameref= (node)=>{this.nameField=node}\n//     getEmailref= (node)=>{this.emailField=node}\n//     getConfigref= (node)=>{this.configField=node}\n//     getTimerref= (node)=>{this.timerField=node}\n//     getflagsref= (node)=>{this.flagsField=node}\n//     onEdit(){\n//         const { nameField, emailField, configField,timerField,flagsField} = this\n//         const { name, email, config_bool, timer_integer, flags} = this.props\n//         nameField.value = name\n//         emailField.value = email\n//         configField.value = config_bool\n//         timerField.value = timer_integer\n//         flagsField.value = flags\n//         this.setState({isEdit:true})\n//     }\n//     onSave(){\n//         const {id, onSave} = this.props\n//         const {nameField, emailField, configField,timerField,flagsField} = this\n//         onSave({\n//             id:id,\n//             name:nameField.value,\n//             email:emailField.value,\n//             config_bool:configField.value,\n//             timer_integer:timerField.value,\n//             flags:flagsField.value,\n//             dateactivate:new Date().toGMTString(),\n//             dateupdate:new Date().toGMTString()\n//         })\n//         this.setState({isEdit:false})\n//     }\n//     onСancel(){\n//         this.setState({isEdit:false})\n//     }\n//     render(){\n//         const {onEdit, onSave, onСancel, getNameref, getEmailref, getConfigref, getTimerref, getflagsref} = this\n//         const {isEdit} = this.state\n//         const {id, name, email, config_bool, timer_integer, flags, dateactivate, dateupdate, onRemove} = this.props\n//         return(\n//             <div className='card-user'>\n//                 <div className='item'>\n//                     <div>{id}</div>\n//                 </div>\n//                 <div className='item'>\n//                     <div hidden={isEdit}>{name}</div>\n//                     <input ref={getNameref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{email}</div>\n//                     <input ref={getEmailref} type=\"text\" size='10' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{config_bool}</div>\n//                     <input ref={getConfigref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{timer_integer}</div>\n//                     <input ref={getTimerref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{flags}</div>\n//                     <input ref={getflagsref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateactivate}</div>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateupdate}</div>\n//                 </div>\n//                 <button className='item' onClick={isEdit?onSave:onEdit}>{isEdit?'Save':'Edit'}</button> \n//                 <button className='item' onClick={isEdit?onСancel:onRemove}>{isEdit?'Cancel':'Delete'}</button>\n//             </div>\n//         )\n//     }\n// }\n//Old vers\n// const Color = ({id, name, email, onRemove=f=>f})=>\n//     <div className='card-user'>\n//         <div className='item'>{id}</div>\n//         <div className='item'>{name}</div>\n//         <div className='item' >{email}</div>\n//         <button className='item'>Edit</button> \n//         <button className='item' onClick={onRemove}>Delete</button>\n//     </div>\n\n\nexport default User;","map":{"version":3,"sources":["/home/vm/Загрузки/test_work/src/Components/React/User/index.js"],"names":["React","Component","editUser","switchEditMode","User","store","id","name","email","config_bool","timer_integer","flags","dateactivate","dateupdate","onRemove","isEdit","console","dir","nameField","emailField","configField","timerField","flagsField","dateactivateField","onEdit","dispatch","onCancel","onSave","log","value","getNameref","node","getEmailref","getConfigref","getTimerref","getflagsref","getDateActivateref"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './style.css'\nimport editUser from '../../Redux/Actions/EditUser'\nimport switchEditMode from '../../Redux/Actions/SwitchEditMode'\n\nconst User = ({store, id, name, email, config_bool, timer_integer, flags, dateactivate, dateupdate, onRemove, isEdit})=>{\n   console.dir(isEdit)\n   let nameField, emailField, configField, timerField, flagsField, dateactivateField\n\n   const onEdit=()=>\n      store.dispatch(\n          switchEditMode(true, id)\n      )\n   \n\n  const onCancel =()=>\n      store.dispatch(\n          switchEditMode(false, id)\n      )\n   \n\n   const onSave = ()=>{\n      //const {nameField, emailField,configField,timerField,flagsField,dateactivateField} = this\n      console.log(this)\n      store.dispatch(\n         editUser(\n            nameField.value,\n            emailField.value,\n            configField.value,\n            timerField.value,\n            flagsField.value,\n            dateactivateField.value\n            )\n      )\n      onCancel()\n   }\n   \n   const getNameref = (node)=>{nameField=node}\n   const getEmailref= (node)=>{emailField=node}\n   const getConfigref= (node)=>{configField=node}\n   const getTimerref= (node)=>{timerField=node}\n   const getflagsref= (node)=>{flagsField=node}\n   const getDateActivateref= (node)=>{dateactivateField=node}\n\n   //const {getNameref, getEmailref, getConfigref, getTimerref, getflagsref, getDateActivateref}=this\n   return (\n      <div className='card-user'>\n               <div className='item'>\n                  <div>{id}</div>\n               </div>\n               <div className='item'>\n                  <div hidden={isEdit}>{name}</div>\n                  <input ref={getNameref} type=\"text\" size='5' hidden={!isEdit} placeholder={name}></input>\n               </div>\n               <div className='item' >\n                  <div hidden={isEdit}>{email}</div>\n                  <input ref={getEmailref} type=\"text\" size='10' hidden={!isEdit}></input>\n               </div>\n               <div className='item' >\n                  <div hidden={isEdit}>{config_bool}</div>\n                  <input ref={getConfigref} type=\"text\" size='5' hidden={!isEdit}></input>\n               </div>\n               <div className='item' >\n                  <div hidden={isEdit}>{timer_integer}</div>\n                  <input ref={getTimerref} type=\"text\" size='5' hidden={!isEdit}></input>\n               </div>\n               <div className='item'>\n                  <div hidden={isEdit}>{flags}</div>\n                  <input ref={getflagsref} type=\"text\" size='5' hidden={!isEdit}></input>\n               </div>\n               <div className='item' >\n                  <div hidden={isEdit}>{dateactivate}</div>\n                  <input ref={getDateActivateref} type=\"text\" size='5' hidden={!isEdit}></input>\n               </div>\n               <div className='item' >\n                  <div>{dateupdate}</div>\n               </div>\n               <button className='item' onClick={isEdit?onSave:onEdit}>{isEdit?'Save':'Edit'}</button> \n               <button className='item' onClick={isEdit?onCancel:onRemove}>{isEdit?'Cancel':'Delete'}</button>\n            </div>\n   )\n}\n\n\n//User.getIdref = (node)=>{this.idField=node}\n\nUser.getNameref= (node)=>{this.nameField=node}\nUser.getEmailref= (node)=>{this.emailField=node}\nUser.getConfigref= (node)=>{this.configField=node}\nUser.getTimerref= (node)=>{this.timerField=node}\nUser.getflagsref= (node)=>{this.flagsField=node}\nUser.getDateActivateref= (node)=>{this.dateactivateField=node}\n\n// function onSave(){\n\n// }\n\n// class Color extends Component{\n\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             isEdit:false\n//         }\n\n//         this.onEdit=this.onEdit.bind(this)\n//         this.onSave=this.onSave.bind(this)\n//         this.onСancel=this.onСancel.bind(this)\n//     }\n\n//     getIdref = (node)=>{this.idField=node}\n//     getNameref= (node)=>{this.nameField=node}\n//     getEmailref= (node)=>{this.emailField=node}\n//     getConfigref= (node)=>{this.configField=node}\n//     getTimerref= (node)=>{this.timerField=node}\n//     getflagsref= (node)=>{this.flagsField=node}\n    \n//     onEdit(){\n//         const { nameField, emailField, configField,timerField,flagsField} = this\n//         const { name, email, config_bool, timer_integer, flags} = this.props\n        \n//         nameField.value = name\n//         emailField.value = email\n//         configField.value = config_bool\n//         timerField.value = timer_integer\n//         flagsField.value = flags\n\n//         this.setState({isEdit:true})\n//     }\n\n//     onSave(){\n//         const {id, onSave} = this.props\n//         const {nameField, emailField, configField,timerField,flagsField} = this\n//         onSave({\n//             id:id,\n//             name:nameField.value,\n//             email:emailField.value,\n//             config_bool:configField.value,\n//             timer_integer:timerField.value,\n//             flags:flagsField.value,\n//             dateactivate:new Date().toGMTString(),\n//             dateupdate:new Date().toGMTString()\n//         })\n//         this.setState({isEdit:false})\n//     }\n\n//     onСancel(){\n//         this.setState({isEdit:false})\n//     }\n\n\n\n//     render(){\n//         const {onEdit, onSave, onСancel, getNameref, getEmailref, getConfigref, getTimerref, getflagsref} = this\n//         const {isEdit} = this.state\n//         const {id, name, email, config_bool, timer_integer, flags, dateactivate, dateupdate, onRemove} = this.props\n//         return(\n//             <div className='card-user'>\n//                 <div className='item'>\n//                     <div>{id}</div>\n//                 </div>\n//                 <div className='item'>\n//                     <div hidden={isEdit}>{name}</div>\n//                     <input ref={getNameref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{email}</div>\n//                     <input ref={getEmailref} type=\"text\" size='10' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{config_bool}</div>\n//                     <input ref={getConfigref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{timer_integer}</div>\n//                     <input ref={getTimerref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div hidden={isEdit}>{flags}</div>\n//                     <input ref={getflagsref} type=\"text\" size='5' hidden={!isEdit}></input>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateactivate}</div>\n//                 </div>\n//                 <div className='item' >\n//                     <div>{dateupdate}</div>\n//                 </div>\n//                 <button className='item' onClick={isEdit?onSave:onEdit}>{isEdit?'Save':'Edit'}</button> \n//                 <button className='item' onClick={isEdit?onСancel:onRemove}>{isEdit?'Cancel':'Delete'}</button>\n//             </div>\n//         )\n//     }\n// }\n\n\n//Old vers\n// const Color = ({id, name, email, onRemove=f=>f})=>\n//     <div className='card-user'>\n//         <div className='item'>{id}</div>\n//         <div className='item'>{name}</div>\n//         <div className='item' >{email}</div>\n//         <button className='item'>Edit</button> \n//         <button className='item' onClick={onRemove}>Delete</button>\n//     </div>\n\nexport default User "]},"metadata":{},"sourceType":"module"}