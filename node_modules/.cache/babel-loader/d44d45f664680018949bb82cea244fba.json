{"ast":null,"code":"var _jsxFileName = \"/home/vm/test_work/src/Components/AddCard/index.js\";\nimport React, { Component } from 'react'; //Переделать\n\nclass PatternCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getIdref = node => {\n      this.idField = node;\n    };\n\n    this.getNameref = node => {\n      this.nameField = node;\n    };\n\n    this.getEmailref = node => {\n      this.emailField = node;\n    };\n\n    this.getConfigref = node => {\n      this.configField = node;\n    };\n\n    this.getTimerref = node => {\n      this.timerField = node;\n    };\n\n    this.getflagsref = node => {\n      this.flagsField = node;\n    };\n\n    this.state = {};\n    this.getCard = this.getCard.bind(this);\n  }\n\n  getCard() {\n    const idField = this.idField,\n          nameField = this.nameField,\n          emailField = this.emailField,\n          configField = this.configField,\n          timerField = this.timerField,\n          flagsField = this.flagsField; //const {freeId} = this.props\n\n    return {\n      id: idField,\n      name: nameField.value,\n      email: emailField.value,\n      config_bool: configField,\n      timer_integer: timerField,\n      flags: flagsField,\n      dateactivate: new Date().toGMTString(),\n      dateupdate: new Date().toGMTString()\n    };\n  }\n\n  render() {\n    const getIdref = this.getIdref,\n          getNameref = this.getNameref,\n          getEmailref = this.getEmailref,\n          getConfigref = this.getConfigref,\n          getTimerref = this.getTimerref,\n          getflagsref = this.getflagsref,\n          getCard = this.getCard;\n    const _this$props = this.props,\n          onCancel = _this$props.onCancel,\n          onAdd = _this$props.onAdd;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"id:\"), React.createElement(\"input\", {\n      ref: getIdref,\n      type: \"text\",\n      size: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      ref: getNameref,\n      type: \"text\",\n      size: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Mail:\"), React.createElement(\"input\", {\n      ref: getEmailref,\n      type: \"text\",\n      size: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Config:\"), React.createElement(\"input\", {\n      ref: getConfigref,\n      type: \"text\",\n      size: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Timer:\"), React.createElement(\"input\", {\n      ref: getTimerref,\n      type: \"text\",\n      size: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Flags:\"), React.createElement(\"input\", {\n      ref: getflagsref,\n      type: \"text\",\n      size: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"item\",\n      onClick: () => onAdd(getCard()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"button\", {\n      className: \"item\",\n      onClick: onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\n\nclass AddCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAddMode: false\n    };\n    this.openAddMode = this.openAddMode.bind(this);\n    this.closeAddMode = this.closeAddMode.bind(this);\n    this.AddCard = this.AddCard.bind(this);\n  }\n\n  openAddMode() {\n    this.setState({\n      isAddMode: true\n    });\n  }\n\n  closeAddMode() {\n    this.setState({\n      isAddMode: false\n    });\n  }\n\n  AddCard(value) {\n    const onAddCard = this.props.onAddCard;\n    onAddCard(value);\n  }\n\n  render() {\n    const isAddMode = this.state.isAddMode;\n    const openAddMode = this.openAddMode,\n          closeAddMode = this.closeAddMode,\n          AddCard = this.AddCard;\n    const freeId = this.props.freeId;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      hidden: isAddMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: openAddMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Add\")), React.createElement(\"div\", {\n      hidden: !isAddMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(PatternCard, {\n      onAdd: AddCard,\n      onCancel: closeAddMode,\n      freeId: freeId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AddCard;","map":{"version":3,"sources":["/home/vm/test_work/src/Components/AddCard/index.js"],"names":["React","Component","PatternCard","constructor","props","getIdref","node","idField","getNameref","nameField","getEmailref","emailField","getConfigref","configField","getTimerref","timerField","getflagsref","flagsField","state","getCard","bind","id","name","value","email","config_bool","timer_integer","flags","dateactivate","Date","toGMTString","dateupdate","render","onCancel","onAdd","AddCard","isAddMode","openAddMode","closeAddMode","setState","onAddCard","freeId"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B,C,CAEA;;AACA,MAAMC,WAAN,SAA0BD,SAA1B,CAAmC;AAE/BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,QATkB,GASNC,IAAD,IAAQ;AAAC,WAAKC,OAAL,GAAaD,IAAb;AAAkB,KATpB;;AAAA,SAUlBE,UAVkB,GAULF,IAAD,IAAQ;AAAC,WAAKG,SAAL,GAAeH,IAAf;AAAoB,KAVvB;;AAAA,SAWlBI,WAXkB,GAWJJ,IAAD,IAAQ;AAAC,WAAKK,UAAL,GAAgBL,IAAhB;AAAqB,KAXzB;;AAAA,SAYlBM,YAZkB,GAYHN,IAAD,IAAQ;AAAC,WAAKO,WAAL,GAAiBP,IAAjB;AAAsB,KAZ3B;;AAAA,SAalBQ,WAbkB,GAaJR,IAAD,IAAQ;AAAC,WAAKS,UAAL,GAAgBT,IAAhB;AAAqB,KAbzB;;AAAA,SAclBU,WAdkB,GAcJV,IAAD,IAAQ;AAAC,WAAKW,UAAL,GAAgBX,IAAhB;AAAqB,KAdzB;;AAEd,SAAKY,KAAL,GAAW,EAAX;AAIA,SAAKC,OAAL,GAAa,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAb;AACH;;AASDD,EAAAA,OAAO,GAAE;AAAA,UACEZ,OADF,GACuE,IADvE,CACEA,OADF;AAAA,UACWE,SADX,GACuE,IADvE,CACWA,SADX;AAAA,UACsBE,UADtB,GACuE,IADvE,CACsBA,UADtB;AAAA,UACkCE,WADlC,GACuE,IADvE,CACkCA,WADlC;AAAA,UAC8CE,UAD9C,GACuE,IADvE,CAC8CA,UAD9C;AAAA,UACyDE,UADzD,GACuE,IADvE,CACyDA,UADzD,EAEL;;AACA,WAAO;AACHI,MAAAA,EAAE,EAACd,OADA;AAEHe,MAAAA,IAAI,EAACb,SAAS,CAACc,KAFZ;AAGHC,MAAAA,KAAK,EAACb,UAAU,CAACY,KAHd;AAIHE,MAAAA,WAAW,EAACZ,WAJT;AAKHa,MAAAA,aAAa,EAACX,UALX;AAMHY,MAAAA,KAAK,EAACV,UANH;AAOHW,MAAAA,YAAY,EAAC,IAAIC,IAAJ,GAAWC,WAAX,EAPV;AAQHC,MAAAA,UAAU,EAAC,IAAIF,IAAJ,GAAWC,WAAX;AARR,KAAP;AAUH;;AAEDE,EAAAA,MAAM,GAAE;AAAA,UACG3B,QADH,GACyF,IADzF,CACGA,QADH;AAAA,UACaG,UADb,GACyF,IADzF,CACaA,UADb;AAAA,UACyBE,WADzB,GACyF,IADzF,CACyBA,WADzB;AAAA,UACsCE,YADtC,GACyF,IADzF,CACsCA,YADtC;AAAA,UACoDE,WADpD,GACyF,IADzF,CACoDA,WADpD;AAAA,UACiEE,WADjE,GACyF,IADzF,CACiEA,WADjE;AAAA,UAC8EG,OAD9E,GACyF,IADzF,CAC8EA,OAD9E;AAAA,wBAEsB,KAAKf,KAF3B;AAAA,UAEG6B,QAFH,eAEGA,QAFH;AAAA,UAEaC,KAFb,eAEaA,KAFb;AAGJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAO,MAAA,GAAG,EAAE7B,QAAZ;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAO,MAAA,GAAG,EAAEG,UAAZ;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAoC,MAAA,IAAI,EAAC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,EASI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAO,MAAA,GAAG,EAAEE,WAAZ;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,IAAI,EAAC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CATJ,EAaI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAO,MAAA,GAAG,EAAEE,YAAZ;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,IAAI,EAAC,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAbJ,EAiBI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,MAAA,GAAG,EAAEE,WAAZ;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,IAAI,EAAC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAjBJ,EAqBI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,MAAA,GAAG,EAAEE,WAAZ;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,IAAI,EAAC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CArBJ,EAyBI;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,OAAO,EAAE,MAAIkB,KAAK,CAACf,OAAO,EAAR,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAzBJ,EA0BI;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,OAAO,EAAEc,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ,CADJ,CADJ;AAgCH;;AApE8B;;AAwEnC,MAAME,OAAN,SAAsBlC,SAAtB,CAA+B;AAE3BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKc,KAAL,GAAW;AACPkB,MAAAA,SAAS,EAAC;AADH,KAAX;AAGA,SAAKC,WAAL,GAAiB,KAAKA,WAAL,CAAiBjB,IAAjB,CAAsB,IAAtB,CAAjB;AACA,SAAKkB,YAAL,GAAkB,KAAKA,YAAL,CAAkBlB,IAAlB,CAAuB,IAAvB,CAAlB;AACA,SAAKe,OAAL,GAAa,KAAKA,OAAL,CAAaf,IAAb,CAAkB,IAAlB,CAAb;AACH;;AAEDiB,EAAAA,WAAW,GAAE;AACT,SAAKE,QAAL,CAAc;AAACH,MAAAA,SAAS,EAAC;AAAX,KAAd;AACH;;AAEDE,EAAAA,YAAY,GAAE;AACV,SAAKC,QAAL,CAAc;AAACH,MAAAA,SAAS,EAAC;AAAX,KAAd;AACH;;AAEDD,EAAAA,OAAO,CAACZ,KAAD,EAAO;AAAA,UACHiB,SADG,GACU,KAAKpC,KADf,CACHoC,SADG;AAEVA,IAAAA,SAAS,CAACjB,KAAD,CAAT;AACH;;AAGDS,EAAAA,MAAM,GAAE;AAAA,UACGI,SADH,GACgB,KAAKlB,KADrB,CACGkB,SADH;AAAA,UAEGC,WAFH,GAEwC,IAFxC,CAEGA,WAFH;AAAA,UAEeC,YAFf,GAEwC,IAFxC,CAEeA,YAFf;AAAA,UAE6BH,OAF7B,GAEwC,IAFxC,CAE6BA,OAF7B;AAAA,UAGGM,MAHH,GAGa,KAAKrC,KAHlB,CAGGqC,MAHH;AAIJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,MAAM,EAAEL,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ,EAII;AAAK,MAAA,MAAM,EAAE,CAACD,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAED,OAApB;AAA6B,MAAA,QAAQ,EAAEG,YAAvC;AAAqD,MAAA,MAAM,EAAEG,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CADJ;AAUH;;AAxC0B;;AA2C/B,eAAeN,OAAf","sourcesContent":["import React,{Component} from 'react';\n\n//Переделать\nclass PatternCard extends Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n\n        }\n\n        this.getCard=this.getCard.bind(this)\n    }\n\n    getIdref = (node)=>{this.idField=node}\n    getNameref= (node)=>{this.nameField=node}\n    getEmailref= (node)=>{this.emailField=node}\n    getConfigref= (node)=>{this.configField=node}\n    getTimerref= (node)=>{this.timerField=node}\n    getflagsref= (node)=>{this.flagsField=node}\n\n    getCard(){\n        const {idField, nameField, emailField, configField,timerField,flagsField} = this\n        //const {freeId} = this.props\n        return {\n            id:idField,\n            name:nameField.value,\n            email:emailField.value,\n            config_bool:configField,\n            timer_integer:timerField,\n            flags:flagsField,\n            dateactivate:new Date().toGMTString(),\n            dateupdate:new Date().toGMTString()\n        }\n    }\n\n    render(){\n        const {getIdref, getNameref, getEmailref, getConfigref, getTimerref, getflagsref, getCard} = this\n        const {onCancel, onAdd} = this.props\n        return(\n            <div>\n                <div className='card-user'>\n                    <div className='item'>\n                        <div>id:</div>\n                        <input ref={getIdref} type=\"text\" size='5'></input>\n                    </div>\n                    <div className='item'>\n                        <div>Name:</div>\n                        <input ref={getNameref} type=\"text\" size='5'></input>\n                    </div>\n                    <div className='item'>\n                        <div>Mail:</div>\n                        <input ref={getEmailref} type=\"text\" size='10'></input>\n                    </div>\n                    <div className='item'>\n                        <div>Config:</div>\n                        <input ref={getConfigref} type=\"text\" size='5'></input>\n                    </div>\n                    <div className='item'>\n                        <div>Timer:</div>\n                        <input ref={getTimerref} type=\"text\" size='5'></input>\n                    </div>\n                    <div className='item'>\n                        <div>Flags:</div>\n                        <input ref={getflagsref} type=\"text\" size='5'></input>\n                    </div>\n                    <button className='item' onClick={()=>onAdd(getCard())} >Add</button>\n                    <button className='item' onClick={onCancel}>Cancel</button>\n                </div>\n            </div>\n        )\n    } \n}\n    \n\nclass AddCard extends Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            isAddMode:false\n        }\n        this.openAddMode=this.openAddMode.bind(this)\n        this.closeAddMode=this.closeAddMode.bind(this)\n        this.AddCard=this.AddCard.bind(this)\n    }\n\n    openAddMode(){\n        this.setState({isAddMode:true})\n    }\n\n    closeAddMode(){\n        this.setState({isAddMode:false})\n    }\n\n    AddCard(value){\n        const {onAddCard} = this.props\n        onAddCard(value)\n    }\n\n\n    render(){\n        const {isAddMode} = this.state\n        const {openAddMode,closeAddMode, AddCard} = this\n        const {freeId} = this.props\n        return(\n            <div >\n                <div hidden={isAddMode}>\n                    <button onClick={openAddMode}>Add</button>\n                </div>\n                <div hidden={!isAddMode}>\n                    <PatternCard onAdd={AddCard} onCancel={closeAddMode} freeId={freeId}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddCard"]},"metadata":{},"sourceType":"module"}