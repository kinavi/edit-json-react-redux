{"ast":null,"code":"var _jsxFileName = \"/home/vm/simple_build_facebook/src/Components/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport userApi from '../Data/userApi.json';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: userApi,\n      isHide: false,\n      strJSON: ''\n    }; //this.taRef = React.createRef();\n\n    this.removeCard = this.removeCard.bind(this);\n    this.setCardsParseJSON = this.setCardsParseJSON.bind(this);\n  }\n\n  // componentDidMount(){\n  //     console.log(this.refs._ref.value);\n  // }\n  setCardsParseJSON() {\n    const value = this.refs._ref.value;\n    console.log(value);\n\n    if (IsJsonString(value)) {\n      const cards = JSON.parse(value);\n      console.log(cards);\n      if (Array.isArray(cards)) this.setState({\n        cards\n      });else {\n        this.setState({\n          cards: [cards]\n        });\n      }\n    } else {\n      console.log('Что за хуйню ты ввел?');\n    }\n  }\n\n  removeCard(id) {\n    const cards = this.state.cards.filter(card => card.id !== id);\n    this.setState({\n      cards\n    });\n  }\n\n  render() {\n    const removeCard = this.removeCard,\n          setCardsParseJSON = this.setCardsParseJSON;\n    const cards = this.state.cards; //const { _ta } = this.refs\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      ref: \"_ref\",\n      onInput: setCardsParseJSON,\n      name: \"comment\",\n      cols: \"40\",\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"test\"), React.createElement(CardList, {\n      cards: cards,\n      onRemove: removeCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Add user\"));\n  }\n\n}\n\nApp.defaultProps = {\n  cards: [],\n  isHide: false\n};\nApp.propTypes = {\n  cards: PropTypes.array,\n  isHide: PropTypes.bool\n};\n\nfunction IsJsonString(str) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vm/simple_build_facebook/src/Components/App.js"],"names":["React","Component","CardList","userApi","PropTypes","App","constructor","props","state","cards","isHide","strJSON","removeCard","bind","setCardsParseJSON","value","refs","_ref","console","log","IsJsonString","JSON","parse","Array","isArray","setState","id","filter","card","render","defaultProps","propTypes","array","bool","str","e"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport CardList from './CardList'\nimport userApi from '../Data/userApi.json'\nimport PropTypes from 'prop-types'\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            cards: userApi,\n            isHide:false,\n            strJSON:''\n        }\n        //this.taRef = React.createRef();\n        this.removeCard=this.removeCard.bind(this)\n        this.setCardsParseJSON=this.setCardsParseJSON.bind(this)\n    }\n\n    static defaultProps={\n        cards:[],\n        isHide:false\n    }\n\n    static propTypes = {\n        cards:PropTypes.array,\n        isHide:PropTypes.bool\n        \n    }\n    // componentDidMount(){\n    //     console.log(this.refs._ref.value);\n    // }\n\n    setCardsParseJSON(){\n        const {value} = this.refs._ref\n        console.log(value);\n\n        if(IsJsonString(value)){\n            const cards = JSON.parse(value)\n            console.log(cards);\n            if(Array.isArray(cards))\n                this.setState({cards})\n            else\n            {\n                this.setState({cards:[cards]})\n            }\n        }\n        else{\n            console.log('Что за хуйню ты ввел?');\n        }\n        \n            \n    }\n\n    removeCard(id)\n    {\n        const cards = this.state.cards.filter(\n            card=>card.id !== id\n        )\n        this.setState({cards})\n    }\n\n    render() {\n        const {removeCard, setCardsParseJSON}=this\n        const { cards } = this.state\n        //const { _ta } = this.refs\n        return(\n            <div>\n                \n                <textarea ref='_ref' onInput={setCardsParseJSON} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n                <div>test</div>\n                <CardList cards={cards} onRemove={removeCard}/>\n                <button>Add user</button>\n            </div>\n            \n        )\n    }\n}\n\nfunction IsJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}