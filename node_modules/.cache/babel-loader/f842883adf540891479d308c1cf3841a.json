{"ast":null,"code":"var _jsxFileName = \"/home/vm/test_work/src/Components/React/UsersList/index.js\";\nimport React from 'react';\nimport User from '../User';\nimport './style.css';\nimport AddCard from '../../AddCard';\nimport RemoveUser from '../../Redux/Actions/RemoveUser';\nimport SwitchEditMode from '../../Redux/Actions/SwitchEditMode';\n\nconst UsersList = ({\n  store\n}) => {\n  const _store$getState = store.getState(),\n        Users = _store$getState.Users; //console.dir(RemoveUser);\n  //const sortedColors = [...colors].sort(sortFunction(sort))\n\n\n  {\n    console.log(Users[0].isEdit);\n  }\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Users:\"), React.createElement(\"div\", {\n    className: \"list-cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, Users.length === 0 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\") : Users.map(user => React.createElement(User, Object.assign({\n    key: user.id\n  }, user, {\n    store: store,\n    onRemove: () => store.dispatch(RemoveUser(user.id)),\n    onEdit: () => store.dispatch(SwitchEditMode(true)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })))));\n}; //id, name, email, config_bool, timer_integer, flags, dateactivate, dateupdate    id={user.id} name={user.name} email={user.email} {user.} \n// const CardList = ({ fuAddCard=f=>f ,list, onRemove=f=>f, isHide, Save=f=>f })=>\n//     <div hidden={isHide}>\n//         <div>Users:</div>\n//         <div className='list-cards'>\n//             <div>\n//                 {list.map(card=>\n//                     <Card key={card.id} {...card} \n//                         onRemove={()=>onRemove(card.id)} \n//                         onSave={Save}\n//                     />\n//                     )\n//                 }\n//             </div>\n//             <AddCard onAddCard={()=>fuAddCard()}/> \n//         </div>\n//     </div>\n\n\nexport default UsersList;","map":{"version":3,"sources":["/home/vm/test_work/src/Components/React/UsersList/index.js"],"names":["React","User","AddCard","RemoveUser","SwitchEditMode","UsersList","store","getState","Users","console","log","isEdit","length","map","user","id","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAAA,0BACPA,KAAK,CAACC,QAAN,EADO;AAAA,QACjBC,KADiB,mBACjBA,KADiB,EAEzB;AACA;;;AAEA;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAAC,CAAD,CAAL,CAASG,MAArB;AAA6B;AAC9B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMH,KAAK,CAACI,MAAN,KAAe,CAAhB,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DADH,GAEGJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IACV,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,KAAwBD,IAAxB;AAA8B,IAAA,KAAK,EAAER,KAArC;AAEA,IAAA,QAAQ,EAAE,MACNA,KAAK,CAACU,QAAN,CACQb,UAAU,CAACW,IAAI,CAACC,EAAN,CADlB,CAHJ;AAQA,IAAA,MAAM,EAAE,MACJT,KAAK,CAACU,QAAN,CACIZ,cAAc,CAAC,IAAD,CADlB,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CAHR,CAFJ,CADJ;AA2BH,CAjCD,C,CAkCA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAeC,SAAf","sourcesContent":["import React from 'react'\nimport User from '../User'\nimport './style.css'\nimport AddCard from '../../AddCard'\nimport RemoveUser from '../../Redux/Actions/RemoveUser'\nimport SwitchEditMode from '../../Redux/Actions/SwitchEditMode'\n\nconst UsersList = ({store})=>{\n    const { Users } = store.getState()\n    //console.dir(RemoveUser);\n    //const sortedColors = [...colors].sort(sortFunction(sort))\n\n    {console.log(Users[0].isEdit)}\n    return (\n        <div>\n            <div>Users:</div>\n            <div className='list-cards'>\n                {(Users.length===0)?\n                    <p>Нет данных</p>:\n                    Users.map(user=>\n                        <User key={user.id} {...user} store={store}\n\n                        onRemove={() =>\n                            store.dispatch(\n                                    RemoveUser(user.id)\n                                )\n                            } \n\n                        onEdit={()=>\n                            store.dispatch(\n                                SwitchEditMode(true)\n                            )\n                        }\n                        />\n                    )\n                }\n            </div>\n        </div>\n    )\n    \n}\n//id, name, email, config_bool, timer_integer, flags, dateactivate, dateupdate    id={user.id} name={user.name} email={user.email} {user.} \n\n// const CardList = ({ fuAddCard=f=>f ,list, onRemove=f=>f, isHide, Save=f=>f })=>\n//     <div hidden={isHide}>\n//         <div>Users:</div>\n//         <div className='list-cards'>\n//             <div>\n            \n//                 {list.map(card=>\n                    \n//                     <Card key={card.id} {...card} \n//                         onRemove={()=>onRemove(card.id)} \n//                         onSave={Save}\n//                     />\n//                     )\n//                 }\n//             </div>\n//             <AddCard onAddCard={()=>fuAddCard()}/> \n//         </div>\n        \n//     </div>\n\nexport default UsersList  "]},"metadata":{},"sourceType":"module"}