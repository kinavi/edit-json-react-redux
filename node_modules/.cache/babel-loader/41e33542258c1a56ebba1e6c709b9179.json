{"ast":null,"code":"var _jsxFileName = \"/home/vm/simple_build_facebook/src/Components/InputField/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; //!!!НАДО ПЕРЕДЕЛАТЬ\n\nclass InputField extends Component {\n  constructor(props) {\n    var _temp;\n\n    (_temp = super(props), this.getInputRef = node => {\n      this.textarea = node;\n    }, _temp), //this.textarea=undefined,\n    this.state = {\n      strInput: '',\n      strLog: ''\n    };\n  }\n\n  render() {\n    const getInputRef = this.getInputRef;\n    const setCardsParseJSON = this.props.setCardsParseJSON; //const {value} = this._ref.value\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"\\u0412\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 JSON: \"), React.createElement(\"textarea\", {\n      ref: getInputRef,\n      onInput: () => setCardsParseJSON(this._ref.value),\n      name: \"comment\",\n      cols: \"40\",\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, strLog));\n  }\n\n} // const InputField = ({ setCardsParseJSON=f=>f})=>{\n//     let _ref\n//     return(\n//         <div>\n//             <div>Ведите данные JSON: </div>\n//             <textarea ref={ta=>_ref=ta} onInput={()=>setCardsParseJSON(_ref.value)} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n//         </div>\n//     )\n// }\n\n\nInputField.propTypes = {\n  strInput: PropTypes.array,\n  strLog: PropTypes.array,\n  isHide: PropTypes.bool\n};\nexport default InputField;","map":{"version":3,"sources":["/home/vm/simple_build_facebook/src/Components/InputField/index.js"],"names":["React","Component","PropTypes","InputField","constructor","props","getInputRef","node","textarea","state","strInput","strLog","render","setCardsParseJSON","_ref","value","propTypes","array","isHide","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,MAAMC,UAAN,SAAyBF,SAAzB,CAAkC;AAE9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA;;AACf,mBAAMA,KAAN,QAgBJC,WAhBI,GAgBWC,IAAD,IAAQ;AAAC,WAAKC,QAAL,GAAcD,IAAd;AAAmB,KAhBtC,UACA;AACA,SAAKE,KAAL,GAAW;AACPC,MAAAA,QAAQ,EAAC,EADF;AAEPC,MAAAA,MAAM,EAAC;AAFA,KAFX;AAOH;;AAWDC,EAAAA,MAAM,GAAE;AAAA,UACGN,WADH,GACkB,IADlB,CACGA,WADH;AAAA,UAGGO,iBAHH,GAGwB,KAAKR,KAH7B,CAGGQ,iBAHH,EAIJ;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FADJ,EAEI;AAAU,MAAA,GAAG,EAAEP,WAAf;AAA4B,MAAA,OAAO,EAAE,MAAIO,iBAAiB,CAAC,KAAKC,IAAL,CAAUC,KAAX,CAA1D;AAA6E,MAAA,IAAI,EAAC,SAAlF;AAA4F,MAAA,IAAI,EAAC,IAAjG;AAAsG,MAAA,IAAI,EAAC,GAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMJ,MAAN,CAHJ,CADJ;AAOH;;AAjC6B,C,CAoClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA5CMR,U,CAYKa,S,GAAY;AACfN,EAAAA,QAAQ,EAACR,SAAS,CAACe,KADJ;AAEfN,EAAAA,MAAM,EAACT,SAAS,CAACe,KAFF;AAGfC,EAAAA,MAAM,EAAChB,SAAS,CAACiB;AAHF,C;AAoCvB,eAAehB,UAAf","sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from 'prop-types'\n\n//!!!НАДО ПЕРЕДЕЛАТЬ\nclass InputField extends Component{\n\n    constructor(props) {\n        super(props),\n        //this.textarea=undefined,\n        this.state={\n            strInput:'',\n            strLog:'',\n\n        }\n    }\n\n    static propTypes = {\n        strInput:PropTypes.array,\n        strLog:PropTypes.array,\n        isHide:PropTypes.bool\n        \n    }\n\n    getInputRef = (node)=>{this.textarea=node};\n\n    render(){\n        const {getInputRef} = this\n\n        const {setCardsParseJSON} = this.props\n        //const {value} = this._ref.value\n        return(\n            <div>\n                <div>Ведите данные JSON: </div>\n                <textarea ref={getInputRef} onInput={()=>setCardsParseJSON(this._ref.value)} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n                <div>{strLog}</div>\n            </div>\n        )\n    }\n}\n\n// const InputField = ({ setCardsParseJSON=f=>f})=>{\n//     let _ref\n//     return(\n//         <div>\n//             <div>Ведите данные JSON: </div>\n//             <textarea ref={ta=>_ref=ta} onInput={()=>setCardsParseJSON(_ref.value)} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n//         </div>\n//     )\n// }\n    \n        \n\nexport default InputField"]},"metadata":{},"sourceType":"module"}