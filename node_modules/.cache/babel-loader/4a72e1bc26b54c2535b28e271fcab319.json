{"ast":null,"code":"var _jsxFileName = \"/home/vm/simple_build_facebook/src/Components/InputField/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; //!!!НАДО ПЕРЕДЕЛАТЬ\n\nclass InputField extends Component {\n  constructor(props) {\n    super(props); //this.textarea=undefined,\n\n    this.getInputRef = node => {\n      this.textarea = node;\n    };\n\n    this.state = {\n      value: '',\n      strLog: ''\n    };\n  }\n\n  onChange() {\n    const _this$state = this.state,\n          value = _this$state.value,\n          strLog = _this$state.strLog;\n    const onSetCards = this.props.onSetCards;\n\n    if (IsJsonString(value)) {\n      const json = JSON.parse(value);\n      onSetCards(json); //const newcards = JSON.parse(value)\n      //const {cards} = this.state\n    } else if (value !== '') {\n      this.setState({\n        strLog: 'Не верный формат!'\n      });\n    } else this.setState({\n      strLog: ''\n    });\n  }\n\n  render() {\n    const getInputRef = this.getInputRef;\n    const _this$state2 = this.state,\n          strInput = _this$state2.strInput,\n          strLog = _this$state2.strLog;\n    const onChange = this.props.onChange; //const {value} = this._ref.value =>onChange(strInput)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\\u0412\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 JSON: \"), React.createElement(\"textarea\", {\n      ref: getInputRef,\n      onInput: () => onChange(strInput),\n      name: \"comment\",\n      cols: \"40\",\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, strLog));\n  }\n\n}\n\nInputField.propTypes = {\n  strInput: PropTypes.object,\n  strLog: PropTypes.string,\n  isHide: PropTypes.bool\n};\n\nfunction IsJsonString(str) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n} //()=>setCardsParseJSON(this._ref.value)\n// const InputField = ({ setCardsParseJSON=f=>f})=>{\n//     let _ref\n//     return(\n//         <div>\n//             <div>Ведите данные JSON: </div>\n//             <textarea ref={ta=>_ref=ta} onInput={()=>setCardsParseJSON(_ref.value)} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n//         </div>\n//     )\n// }\n\n\nexport default InputField;","map":{"version":3,"sources":["/home/vm/simple_build_facebook/src/Components/InputField/index.js"],"names":["React","Component","PropTypes","InputField","constructor","props","getInputRef","node","textarea","state","value","strLog","onChange","onSetCards","IsJsonString","json","JSON","parse","setState","render","strInput","propTypes","object","string","isHide","bool","str","e"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,MAAMC,UAAN,SAAyBF,SAAzB,CAAkC;AAE9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AAFe,SAoCnBC,WApCmB,GAoCJC,IAAD,IAAQ;AAAC,WAAKC,QAAL,GAAcD,IAAd;AAAmB,KApCvB;;AAGf,SAAKE,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC,EADC;AAEPC,MAAAA,MAAM,EAAC;AAFA,KAAX;AAKH;;AAQDC,EAAAA,QAAQ,GAAE;AAAA,wBACkB,KAAKH,KADvB;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,MADR,eACQA,MADR;AAAA,UAECE,UAFD,GAEe,KAAKR,KAFpB,CAECQ,UAFD;;AAGN,QAAGC,YAAY,CAACJ,KAAD,CAAf,EAAuB;AACnB,YAAMK,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,KAAX,CAAb;AAEAG,MAAAA,UAAU,CAACE,IAAD,CAAV,CAHmB,CAInB;AACA;AAEH,KAPD,MAQK,IAAGL,KAAK,KAAG,EAAX,EACL;AACI,WAAKQ,QAAL,CAAc;AAACP,QAAAA,MAAM,EAAC;AAAR,OAAd;AACH,KAHI,MAKD,KAAKO,QAAL,CAAc;AAACP,MAAAA,MAAM,EAAC;AAAR,KAAd;AACP;;AAKDQ,EAAAA,MAAM,GAAE;AAAA,UACGb,WADH,GACkB,IADlB,CACGA,WADH;AAAA,yBAEuB,KAAKG,KAF5B;AAAA,UAEGW,QAFH,gBAEGA,QAFH;AAAA,UAEaT,MAFb,gBAEaA,MAFb;AAAA,UAGGC,QAHH,GAGe,KAAKP,KAHpB,CAGGO,QAHH,EAIJ;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FADJ,EAEI;AAAU,MAAA,GAAG,EAAEN,WAAf;AAA4B,MAAA,OAAO,EAAE,MAAIM,QAAQ,CAACQ,QAAD,CAAjD;AAA6D,MAAA,IAAI,EAAC,SAAlE;AAA4E,MAAA,IAAI,EAAC,IAAjF;AAAsF,MAAA,IAAI,EAAC,GAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMT,MAAN,CAHJ,CADJ;AAOH;;AApD6B;;AAA5BR,U,CAYKkB,S,GAAY;AACfD,EAAAA,QAAQ,EAAClB,SAAS,CAACoB,MADJ;AAEfX,EAAAA,MAAM,EAACT,SAAS,CAACqB,MAFF;AAGfC,EAAAA,MAAM,EAACtB,SAAS,CAACuB;AAHF,C;;AA2CvB,SAASX,YAAT,CAAsBY,GAAtB,EAA2B;AACvB,MAAI;AACAV,IAAAA,IAAI,CAACC,KAAL,CAAWS,GAAX;AACH,GAFD,CAEE,OAAOC,CAAP,EAAU;AACR,WAAO,KAAP;AACH;;AACD,SAAO,IAAP;AACH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,eAAexB,UAAf","sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from 'prop-types'\n\n//!!!НАДО ПЕРЕДЕЛАТЬ\nclass InputField extends Component{\n\n    constructor(props) {\n        super(props)\n        //this.textarea=undefined,\n        this.state={\n            value:'',\n            strLog:'',\n\n        }\n    }\n\n    static propTypes = {\n        strInput:PropTypes.object,\n        strLog:PropTypes.string,\n        isHide:PropTypes.bool\n    }\n\n    onChange(){\n        const {value, strLog} = this.state;\n        const {onSetCards} = this.props\n        if(IsJsonString(value)){\n            const json = JSON.parse(value)\n\n            onSetCards(json)\n            //const newcards = JSON.parse(value)\n            //const {cards} = this.state\n            \n        }\n        else if(value!=='')\n        {\n            this.setState({strLog:'Не верный формат!'})\n        }\n        else\n            this.setState({strLog:''})     \n    }\n\n\n    getInputRef = (node)=>{this.textarea=node};\n\n    render(){\n        const {getInputRef} = this\n        const {strInput, strLog} = this.state\n        const {onChange} = this.props\n        //const {value} = this._ref.value =>onChange(strInput)\n        return(\n            <div>\n                <div>Ведите данные JSON: </div>\n                <textarea ref={getInputRef} onInput={()=>onChange(strInput)} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n                <div>{strLog}</div>\n            </div>\n        )\n    }\n}\n\nfunction IsJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n//()=>setCardsParseJSON(this._ref.value)\n// const InputField = ({ setCardsParseJSON=f=>f})=>{\n//     let _ref\n//     return(\n//         <div>\n//             <div>Ведите данные JSON: </div>\n//             <textarea ref={ta=>_ref=ta} onInput={()=>setCardsParseJSON(_ref.value)} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n//         </div>\n//     )\n// }\n    \n        \n\nexport default InputField"]},"metadata":{},"sourceType":"module"}