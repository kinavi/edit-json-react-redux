{"ast":null,"code":"import _objectDestructuringEmpty from \"/home/vm/simple_build_facebook/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nvar _jsxFileName = \"/home/vm/simple_build_facebook/src/Components/InputField/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; //!!!НАДО ПЕРЕДЕЛАТЬ\n\nclass InputField extends Component {\n  constructor(props) {\n    super(props); //this.textarea=undefined,\n\n    this.getInputRef = node => {\n      this.textarea = node;\n    };\n\n    this.state = {\n      strInput,\n      strLog: ''\n    };\n  }\n\n  onChange(value) {\n    _objectDestructuringEmpty(this.state);\n\n    if (IsJsonString(value)) {\n      const newcards = JSON.parse(value);\n      const cards = this.state.cards;\n      if (Array.isArray(newcards)) this.setState({\n        cards: newcards\n      });else {\n        if (!IsConcatId(newcards, cards)) {\n          let newstate = [...cards, newcards];\n          this.setState({\n            cards: newstate\n          });\n        }\n      }\n    } else if (value !== '') {\n      this.setState({\n        strLog: 'Не верный формат!'\n      });\n    } else this.setState({\n      strLog: ''\n    });\n  }\n\n  render() {\n    const getInputRef = this.getInputRef;\n    const _this$state = this.state,\n          strInput = _this$state.strInput,\n          strLog = _this$state.strLog;\n    const setCardsParseJSON = this.props.setCardsParseJSON; //const {value} = this._ref.value\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u0412\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 JSON: \"), React.createElement(\"textarea\", {\n      ref: getInputRef,\n      onInput: onChange,\n      name: \"comment\",\n      cols: \"40\",\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, strLog));\n  }\n\n} //()=>setCardsParseJSON(this._ref.value)\n// const InputField = ({ setCardsParseJSON=f=>f})=>{\n//     let _ref\n//     return(\n//         <div>\n//             <div>Ведите данные JSON: </div>\n//             <textarea ref={ta=>_ref=ta} onInput={()=>setCardsParseJSON(_ref.value)} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n//         </div>\n//     )\n// }\n\n\nInputField.propTypes = {\n  strInput: PropTypes.string,\n  strLog: PropTypes.string,\n  isHide: PropTypes.bool\n};\nexport default InputField;","map":{"version":3,"sources":["/home/vm/simple_build_facebook/src/Components/InputField/index.js"],"names":["React","Component","PropTypes","InputField","constructor","props","getInputRef","node","textarea","state","strInput","strLog","onChange","value","IsJsonString","newcards","JSON","parse","cards","Array","isArray","setState","IsConcatId","newstate","render","setCardsParseJSON","propTypes","string","isHide","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,MAAMC,UAAN,SAAyBF,SAAzB,CAAkC;AAE9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AAFe,SA2CnBC,WA3CmB,GA2CJC,IAAD,IAAQ;AAAC,WAAKC,QAAL,GAAcD,IAAd;AAAmB,KA3CvB;;AAGf,SAAKE,KAAL,GAAW;AACPC,MAAAA,QADO;AAEPC,MAAAA,MAAM,EAAC;AAFA,KAAX;AAKH;;AAQDC,EAAAA,QAAQ,CAACC,KAAD,EAAO;AAAA,8BACA,KAAKJ,KADL;;AAGX,QAAGK,YAAY,CAACD,KAAD,CAAf,EAAuB;AACnB,YAAME,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAjB;AADmB,YAEZK,KAFY,GAEH,KAAKT,KAFF,CAEZS,KAFY;AAGnB,UAAGC,KAAK,CAACC,OAAN,CAAcL,QAAd,CAAH,EACI,KAAKM,QAAL,CAAc;AAACH,QAAAA,KAAK,EAACH;AAAP,OAAd,EADJ,KAGA;AACI,YAAG,CAACO,UAAU,CAACP,QAAD,EAAUG,KAAV,CAAd,EACA;AACI,cAAIK,QAAQ,GAAG,CAAC,GAAGL,KAAJ,EAAUH,QAAV,CAAf;AACA,eAAKM,QAAL,CAAc;AAACH,YAAAA,KAAK,EAACK;AAAP,WAAd;AACH;AAEJ;AACJ,KAdD,MAeK,IAAGV,KAAK,KAAG,EAAX,EACL;AACI,WAAKQ,QAAL,CAAc;AAACV,QAAAA,MAAM,EAAC;AAAR,OAAd;AACH,KAHI,MAKD,KAAKU,QAAL,CAAc;AAACV,MAAAA,MAAM,EAAC;AAAR,KAAd;AACP;;AAKDa,EAAAA,MAAM,GAAE;AAAA,UACGlB,WADH,GACkB,IADlB,CACGA,WADH;AAAA,wBAEuB,KAAKG,KAF5B;AAAA,UAEGC,QAFH,eAEGA,QAFH;AAAA,UAEaC,MAFb,eAEaA,MAFb;AAAA,UAGGc,iBAHH,GAGwB,KAAKpB,KAH7B,CAGGoB,iBAHH,EAIJ;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FADJ,EAEI;AAAU,MAAA,GAAG,EAAEnB,WAAf;AAA4B,MAAA,OAAO,EAAEM,QAArC;AAA+C,MAAA,IAAI,EAAC,SAApD;AAA8D,MAAA,IAAI,EAAC,IAAnE;AAAwE,MAAA,IAAI,EAAC,GAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,MAAN,CAHJ,CADJ;AAOH;;AA3D6B,C,CA6DlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAtEMR,U,CAYKuB,S,GAAY;AACfhB,EAAAA,QAAQ,EAACR,SAAS,CAACyB,MADJ;AAEfhB,EAAAA,MAAM,EAACT,SAAS,CAACyB,MAFF;AAGfC,EAAAA,MAAM,EAAC1B,SAAS,CAAC2B;AAHF,C;AA8DvB,eAAe1B,UAAf","sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from 'prop-types'\n\n//!!!НАДО ПЕРЕДЕЛАТЬ\nclass InputField extends Component{\n\n    constructor(props) {\n        super(props)\n        //this.textarea=undefined,\n        this.state={\n            strInput,\n            strLog:'',\n\n        }\n    }\n\n    static propTypes = {\n        strInput:PropTypes.string,\n        strLog:PropTypes.string,\n        isHide:PropTypes.bool\n    }\n\n    onChange(value){\n        const {} = this.state;\n\n        if(IsJsonString(value)){\n            const newcards = JSON.parse(value)\n            const {cards} = this.state\n            if(Array.isArray(newcards))\n                this.setState({cards:newcards})\n            else\n            {\n                if(!IsConcatId(newcards,cards))\n                {\n                    let newstate = [...cards,newcards]\n                    this.setState({cards:newstate})\n                }\n                \n            }\n        }\n        else if(value!=='')\n        {\n            this.setState({strLog:'Не верный формат!'})\n        }\n        else\n            this.setState({strLog:''})     \n    }\n\n\n    getInputRef = (node)=>{this.textarea=node};\n\n    render(){\n        const {getInputRef} = this\n        const {strInput, strLog} = this.state\n        const {setCardsParseJSON} = this.props\n        //const {value} = this._ref.value\n        return(\n            <div>\n                <div>Ведите данные JSON: </div>\n                <textarea ref={getInputRef} onInput={onChange} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n                <div>{strLog}</div>\n            </div>\n        )\n    }\n}\n//()=>setCardsParseJSON(this._ref.value)\n// const InputField = ({ setCardsParseJSON=f=>f})=>{\n//     let _ref\n//     return(\n//         <div>\n//             <div>Ведите данные JSON: </div>\n//             <textarea ref={ta=>_ref=ta} onInput={()=>setCardsParseJSON(_ref.value)} name=\"comment\" cols=\"40\" rows=\"3\"></textarea>\n//         </div>\n//     )\n// }\n    \n        \n\nexport default InputField"]},"metadata":{},"sourceType":"module"}